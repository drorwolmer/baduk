{"version":3,"sources":["config/config.videos.js","utils.js","consts.js","store/room.js","store/users.js","store/messages.js","modules/meeting.js","components/UserDisplay/UserDisplay.js","components/UserDisplay/index.js","components/UserDisplay/UserList.js","components/SideRoom/index.js","components/SideRoom/SideRoom.js","components/YouTubePlayer/index.js","components/YouTubePlayer/YouTubePlayer.js","components/ChatMessage/index.js","components/ChatMessage/ChatMessage.js","components/ChatDrawer/index.js","components/ChatDrawer/ChatDrawer.js","components/Room/index.js","components/Room/Room.js","components/BottomNav/index.js","components/BottomNav/BottomNav.js","App.js","serviceWorker.js","store/index.js","index.js"],"names":["soundtrackPlayerConfig","id","containerClassName","videoId","options","playlist","width","height","playerVars","autoplay","controls","showinfo","modestbranding","loop","fs","cc_load_policy","iv_load_policy","autohide","disablekb","start","onReady","e","target","setVolume","playVideo","videoArtPlayerConfig","origin","makeReducer","actionHandlers","initialState","state","action","type","getFromLocalStorage","key","defaultValue","value","window","localStorage","getItem","getLocalTracks","JitsiConference","audio","getLocalAudioTrack","video","getLocalVideoTrack","getTracks","userId","isLocal","tracks","getParticipantById","_","find","t","getType","ROOMS","block","roomName","jitsiRoomName","sideRooms","toilet","name","maxSeats","initialRoom","location","href","indexOf","getRoom","room","roomReducer","SET_ROOM","payload","addUser","user","updateUser","update","getLocalUser","users","getUsersByActiveRoom","filter","u","activeRoom","reduceUpdateUser","usersReducer","ADD_USER","REMOVE_USER","omit","UPDATE_USER","ADD_REMOTE_USER_TRACK","trackType","isMuted","UPDATE_DOMINANT_SPEAKER","dominantUserId","console","warn","forEach","isDominantSpeaker","pushMessage","msg","dispatch","Date","getTime","getAllMessages","messages","PUSH_MESSAGE","DELETE_MESSAGE","m","connect","getState","JitsiMeetJS","events","connection","CONNECTION_ESTABLISHED","CONNECTION_FAILED","CONNECTION_DISCONNECTED","JitsiConnection","jitsiConfig","onConnectionSuccess","roomConfig","joinConference","onConnectionFailed","error","addEventListener","disconnect","removeEventListener","undefined","JSON","stringify","initJitsiConference","conference","DISPLAY_NAME_CHANGED","MESSAGE_RECEIVED","PRIVATE_MESSAGE_RECEIVED","CONFERENCE_JOINED","USER_JOINED","TRACK_ADDED","TRACK_REMOVED","USER_LEFT","DOMINANT_SPEAKER_CHANGED","on","displayName","addCommandListener","attributes","emoji","text","ts","parse","recipient","onConferenceJoined","onUserJoined","onRemoteTrackAdded","onRemoteTrackRemoved","onUserLeft","onSideRoomJoined","onSideRoomLeft","join","myUserId","setLocalDisplayName","setLocalEmoji","createLocalTracks","devices","then","onLocalTracks","catch","in_tracks","map","local_track","track","TRACK_MUTE_CHANGED","onTrackMuteChanged","setSenderVideoConstraint","unmute","mute","addTrack","hasTracks","setTimeout","getDisplayName","getParticipantId","LOCAL_TRACK_STOPPED","TRACK_AUDIO_OUTPUT_CHANGED","deviceId","addRemoteUserTrack","containers","removeUser","to","onVideoMuteToggle","setItem","ownerEndpointId","setDisplayName","eventEmitter","emit","sendCommand","unload","each","dispose","leave","attach","ref","current","detachAndDispose","detach","UserDisplay","has_audio","has_video","muted_audio","muted_video","isAudioActive","videoRef","useRef","audioRef","useState","videoTrack","setVideoTrack","audioTrack","setAudioTrack","useSelector","getUserMessages","useEffect","videoClassNames","classNames","className","onClick","stopPropagation","prompt","sendMessage","sendPublicMessage","targetId","sendPrivateTextMessage","sendPrivateMessage","newEmoji","newName","autoPlay","muted","UserList","renderUser","useCallback","orderBy","SideRoom","emptySeatCount","size","localUserInRoom","onFreeSeatClick","from","joinSideRoom","Array","o","i","YouTubePlayer","volume","props","player","setPlayer","ChatMessage","messageClassNames","class","participant","getNick","date","hours_str","getHours","toString","padStart","minutes_str","getMinutes","nice_date","ChatDrawer","Room","withVideoArt","mainAreaUsers","localUser","isEmpty","userInMainArea","toLower","removeCommand","sendCommandOnce","leaveSideRoom","sideRoom","BottomNav","useDispatch","goToRoom","changeConference","document","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","App","soundtrackVolume","playSoundtrack","Boolean","hostname","match","store","rootReducer","combineReducers","messagesReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","logger","thunk","setLogLevel","logLevels","ERROR","init","setInterval","participants","getParticipants","p","_connectionStatus","_id","kickParticipant","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8abba233.chunk.js","sourcesContent":["\nexport const soundtrackPlayerConfig = {\n  id: 'player-soundtrack',\n  containerClassName: 'player-soundtrack',\n  videoId: 'T92xtvU4WRc',\n  options: {\n    videoId: 'T92xtvU4WRc',\n    playlist: 'QtXx3Qubmys',\n    width: 1,               // Player width (in px)\n    height: 1,              // Player height (in px)\n    playerVars: {\n      autoplay: 1,        // Auto-play the video on load\n      controls: 0,        // Show pause/play buttons in player\n      showinfo: 0,        // Hide the video title\n      modestbranding: 1,  // Hide the Youtube Logo\n      loop: 1,            // Run the video in a loop\n      fs: 1,              // Hide the full screen button\n      cc_load_policy: 1, // Hide closed captions\n      iv_load_policy: 3,  // Hide the Video Annotations\n      autohide: 1,         // Hide video controls when playing,\n      disablekb: 1,\n      start: 100\n    },\n  },\n  onReady: e => {\n    e.target.setVolume(100)\n    e.target.playVideo()\n  }\n}\n\nexport const videoArtPlayerConfig = {\n  id: 'muteYouTubeVideoPlayer',\n  containerClassName: 'video-art-player',\n  videoId: '3V9bPvna3nM',\n  options: {\n    videoId: '3V9bPvna3nM', // YouTube Video ID\n    // width: 640, // Player width (in px)\n    // height: 480, // Player height (in px)\n    playerVars: {\n      autoplay: 1, // Auto-play the video on load\n      controls: 0, // Show pause/play buttons in player\n      showinfo: 0, // Hide the video title\n      modestbranding: 1, // Hide the Youtube Logo\n      loop: 1, // Run the video in a loop\n      fs: 0, // Hide the full screen button\n      cc_load_policy: 1, // Hide closed captions\n      iv_load_policy: 3, // Hide the Video Annotations\n      autohide: 1, // Hide video controls when playing,\n      disablekb: 1,\n      playlist: '3V9bPvna3nM', // for the loop\n      // start: offset,\n      origin: 'https://foosa-a977b5f6.localhost.run',\n    },\n  },\n  onReady: e => {\n    e.target.playVideo()\n  }\n}","import _ from 'lodash'\n\nexport const makeReducer = (actionHandlers, initialState) => {\n  return (state = initialState, action) => {\n    if (actionHandlers[action.type]) {\n      return actionHandlers[action.type](state, action)\n    }\n    return state\n  }\n}\n\nexport const getFromLocalStorage = (key, defaultValue) => {\n  let value = window.localStorage.getItem(key)\n  return !value || value === 'null' ? defaultValue : value\n}\n\nexport const getLocalTracks = () => {\n  if (!window.JitsiConference) return {}\n\n  return {\n    audio: window.JitsiConference.getLocalAudioTrack(),\n    video: window.JitsiConference.getLocalVideoTrack()\n  }\n}\n\nexport const getTracks = (userId, isLocal) => {\n  if (isLocal) return getLocalTracks()\n\n  const participant = window.JitsiConference.getParticipantById(userId)\n  const tracks = participant.getTracks()\n  // const types = _.map(tracks, t => t.getType())\n  // console.warn('remote tracks = ' + JSON.stringify(types))\n  return {\n    audio: _.find(tracks, t => t.getType() === 'audio'),\n    video: _.find(tracks, t => t.getType() === 'video'),\n  }\n}\n","export const ROOMS = {\n  block: {\n    roomName: 'block',\n    jitsiRoomName: 'block_demo_block',\n    sideRooms: [],\n  },\n  toilet: {\n    roomName: 'toilet',\n    jitsiRoomName: 'block_demo_toiletsss',\n    sideRooms: [{ name: 'second_room', maxSeats: 5 }],\n  }\n}","import { makeReducer } from '../utils'\nimport { ROOMS } from '../consts'\n\nconst initialRoom = window.location.href.indexOf('toilet') > -1 ? ROOMS.toilet : ROOMS.block\n\nexport const setRoom = room => ({\n  type: 'SET_ROOM',\n  payload: { room },\n})\n\nexport const getRoom = state => state.room\n\nconst roomReducer = makeReducer({\n  SET_ROOM: (state, action) => action.payload.room,\n}, initialRoom)\n\nexport default roomReducer","import _ from 'lodash'\nimport {makeReducer} from '../utils'\n\nexport const addUser = user => ({\n    type: 'ADD_USER',\n    payload: {user},\n})\n\nexport const removeUser = userId => ({\n    type: 'REMOVE_USER',\n    payload: {userId},\n})\n\nexport const updateUser = (userId, update) => ({\n    type: 'UPDATE_USER',\n    payload: {userId, update},\n})\n\nexport const addRemoteUserTrack = (userId, trackType, isMuted) => ({\n    type: 'ADD_REMOTE_USER_TRACK',\n    payload: {userId, trackType, isMuted},\n})\n\nexport const updateDominantSpeaker = userId => ({\n    type: 'UPDATE_DOMINANT_SPEAKER',\n    payload: {userId},\n})\n\nexport const getUser = userId => state => _.get(state.users, userId)\n\nexport const getLocalUser = state => _.find(state.users, {isLocal: true})\n\nexport const getRemoteUsers = state => _.pickBy(state.users, u => !u.isLocal)\n\nexport const getUsersByActiveRoom = roomName => state => _.filter(state.users, u => u.activeRoom === roomName)\n\nconst reduceUpdateUser = (state, user, update) => {\n    return {\n        ...state,\n        [user.id]: {\n            ...user,\n            ...update,\n        },\n    }\n}\n\nconst usersReducer = makeReducer({\n    ADD_USER: (state, action) => {\n        const {user} = action.payload\n        return {\n            ...state,\n            [user.id]: user\n        }\n    },\n    REMOVE_USER: (state, action) => {\n        const {userId} = action.payload\n        return _.omit(state, userId)\n    },\n    UPDATE_USER: (state, action) => {\n        const {userId, update} = action.payload\n        const user = state[userId] || {}\n\n        return reduceUpdateUser(state, user, update)\n    },\n    ADD_REMOTE_USER_TRACK: (state, action) => {\n        const {userId, trackType, isMuted} = action.payload\n        const user = state[userId] || {}\n\n        const update = {\n            [`has_${trackType}`]: true,\n            [`muted_${trackType}`]: isMuted\n        }\n\n        return reduceUpdateUser(state, user, update)\n    },\n    UPDATE_DOMINANT_SPEAKER: (state, action) => {\n        const dominantUserId = action.payload.userId\n\n\n        console.warn(\"UPDATE_DOMINANT_SPEAKER\", action)\n\n        _.forEach(state, (user) => {\n            user.isDominantSpeaker = (user.id === dominantUserId)\n        })\n\n        return state\n    }\n}, {})\n\nexport default usersReducer\n","import _ from 'lodash'\nimport { makeReducer } from '../utils'\n\nexport const pushMessage = (msg) => dispatch => {\n  const key = `${msg.id}-${(new Date()).getTime()}`\n\n  dispatch({\n    type: 'PUSH_MESSAGE',\n    payload: { msg },\n  })\n\n  // setTimeout(() => dispatch(deleteMessage(key)), 7000)\n}\n\nexport const deleteMessage = key => ({\n  type: 'DELETE_MESSAGE',\n  payload: { key },\n})\n\nexport const getUserMessages = userId => state => _.filter(state.messages, m => m.id === userId)\nexport const getAllMessages = state => state.messages\n\nconst roomReducer = makeReducer({\n  PUSH_MESSAGE: (state, action) => {\n    return [...state, action.payload.msg]\n  },\n  DELETE_MESSAGE: (state, action) => {\n    return _.filter(state, m => m.key !== action.payload.key)\n  },\n}, [])\n\nexport default roomReducer\n","import _ from 'lodash'\nimport { getFromLocalStorage, getLocalTracks } from '../utils'\nimport { getRoom, setRoom } from '../store/room'\nimport { addUser, updateUser, addRemoteUserTrack, removeUser, updateDominantSpeaker } from '../store/users'\nimport { pushMessage } from '../store/messages'\nimport { jitsi as jitsiConfig } from '../config/config.dev'\n\nconst JOIN_MINI_CONFERENCE_CMD = 'JOIN_MINI_CONFERENCE'\nconst LEAVE_MINI_CONFERENCE_CMD = 'LEAVE_MINI_CONFERENCE'\nconst SET_EMOJI_CMD = 'SET_EMOJI'\nconst DEFAULT_EMOJI = '😷'\nconst DEFAULT_USERNAME = 'anonymous'\n\nexport const initJitsi = store => {\n    console.warn('initJitsi')\n\n    window.JitsiMeetJS.init(jitsiConfig)\n\n    connect(store)\n}\n\nconst connect = ({ dispatch, getState }) => {\n    const { CONNECTION_ESTABLISHED, CONNECTION_FAILED, CONNECTION_DISCONNECTED } = window.JitsiMeetJS.events.connection\n\n    window.JitsiConnection = new window.JitsiMeetJS.JitsiConnection(null, null, jitsiConfig)\n\n    const onConnectionSuccess = () => {\n        console.warn('onConnectionSuccess')\n\n        const roomConfig = getRoom(getState())\n        joinConference(dispatch, roomConfig)\n    }\n\n    const onConnectionFailed = e => {\n        console.error('Connection Failed!', e)\n    }\n\n    const disconnect = () => {\n        window.JitsiConnection.removeEventListener(CONNECTION_ESTABLISHED, onConnectionSuccess)\n        window.JitsiConnection.removeEventListener(CONNECTION_FAILED, onConnectionFailed)\n        window.JitsiConnection.removeEventListener(CONNECTION_DISCONNECTED, disconnect)\n    }\n\n    // bind connection events\n    window.JitsiConnection.addEventListener(CONNECTION_ESTABLISHED, onConnectionSuccess)\n    window.JitsiConnection.addEventListener(CONNECTION_FAILED, onConnectionFailed)\n    window.JitsiConnection.addEventListener(CONNECTION_DISCONNECTED, disconnect)\n\n    window.JitsiConnection.connect(undefined)\n}\n\n/////////////////\n// ROOMS\n/////////////////\nconst joinConference = (dispatch, roomConfig) => {\n    if (!window.JitsiConnection) return\n\n    console.warn('roomConfig=' + JSON.stringify(roomConfig))\n\n    const JitsiConference = window.JitsiConnection.initJitsiConference(roomConfig.jitsiRoomName, jitsiConfig)\n\n    const {\n        DISPLAY_NAME_CHANGED, MESSAGE_RECEIVED, PRIVATE_MESSAGE_RECEIVED,\n        CONFERENCE_JOINED, USER_JOINED, TRACK_ADDED, TRACK_REMOVED, USER_LEFT,\n        DOMINANT_SPEAKER_CHANGED\n    } = window.JitsiMeetJS.events.conference\n\n    JitsiConference.on(DISPLAY_NAME_CHANGED, (id, displayName) => {\n        dispatch(updateUser(id, { displayName }))\n    })\n\n    JitsiConference.on(DOMINANT_SPEAKER_CHANGED, (id) => {\n        dispatch(updateDominantSpeaker(id))\n    })\n\n    JitsiConference.addCommandListener(SET_EMOJI_CMD, e => {\n        const userId = e.attributes['id']\n        const emoji = e.attributes['emoji']\n\n        console.warn(SET_EMOJI_CMD, userId, emoji)\n\n        dispatch(updateUser(userId, { emoji }))\n    })\n\n    JitsiConference.on(MESSAGE_RECEIVED, function (id, text, ts) {\n        // TODO(DROR): ts can be none here,\n        console.warn('MESSAGE_RECEIVED', id, text, ts)\n        dispatch(pushMessage({\n            id: id,\n            text: text,\n            ts: ts ? new Date(Date.parse(ts)) : new Date(),  // ts is only sent when we refresh\n            recipient: 'public'\n        }))\n    })\n\n    JitsiConference.on(PRIVATE_MESSAGE_RECEIVED, function (id, text, ts) {\n        // TODO(DROR): ts can be none here,\n        console.warn('PRIVATE_MESSAGE_RECEIVED', id, text, ts)\n        dispatch(pushMessage({\n            id: id,\n            text: text,\n            ts: new Date(), // as we have a different ID, we will never receive this...\n            recipient: 'me'\n        }))\n    })\n\n    JitsiConference.on(CONFERENCE_JOINED, onConferenceJoined(dispatch))\n    JitsiConference.on(USER_JOINED, onUserJoined(dispatch))\n    JitsiConference.on(TRACK_ADDED, onRemoteTrackAdded(dispatch))\n    JitsiConference.on(TRACK_REMOVED, onRemoteTrackRemoved(dispatch))\n    JitsiConference.on(USER_LEFT, onUserLeft(dispatch))\n\n    JitsiConference.addCommandListener(JOIN_MINI_CONFERENCE_CMD, onSideRoomJoined(dispatch))\n    JitsiConference.addCommandListener(LEAVE_MINI_CONFERENCE_CMD, onSideRoomLeft(dispatch))\n\n    window.JitsiConference = JitsiConference\n\n    dispatch(setRoom(roomConfig))\n\n    JitsiConference.join()\n}\n\nexport const changeConference = roomConfig => dispatch => {\n    if (!window.JitsiConference) return\n\n    window.JitsiConference.leave()\n    .then(() => {\n        joinConference(dispatch, roomConfig)\n    })\n}\n\n/////////////////\n// LOCAL USER\n/////////////////\nconst onConferenceJoined = dispatch => () => {\n    console.warn('onConferenceJoined')\n\n    const userId = window.JitsiConference.myUserId()\n\n    const displayName = getFromLocalStorage('DISPLAY_NAME', DEFAULT_USERNAME)\n    const emoji = getFromLocalStorage('EMOJI', DEFAULT_EMOJI)\n    // TODO(DROR): Remember camera state\n\n    dispatch(addUser({\n        id: userId,\n        isLocal: true,\n        displayName: displayName,\n        emoji: emoji,\n        activeRoom: 'MAIN'\n    }))\n\n    // Send the cached display_name and emoji to other participants\n    setLocalDisplayName(userId, displayName)\n    setLocalEmoji(userId, emoji)\n\n    // Try to get audio/video. TODO(DROR): This might fail, we need the users's help\n    window.JitsiMeetJS.createLocalTracks({ devices: ['audio', 'video'] })\n    .then(onLocalTracks(dispatch))\n    .catch((error) => {\n        throw error\n    })\n}\n\nconst onLocalTracks = dispatch => in_tracks => {\n    _.map(in_tracks, (local_track) => {\n\n        local_track.addEventListener(\n            window.JitsiMeetJS.events.track.TRACK_MUTE_CHANGED,\n            onTrackMuteChanged(dispatch)\n        )\n\n        // Send lower quality video by default\n        window.JitsiConference.setSenderVideoConstraint(180)\n\n        if (local_track.getType() === 'video') {\n            const last_video_preference = getFromLocalStorage('SHOW_VIDEO', 'false')\n            if (last_video_preference === 'true') {\n                console.warn('unmuting video')\n                local_track.unmute()\n            } else {\n                local_track.mute()\n            }\n        } else {\n            // Always start with audio muted\n            local_track.mute().then(() => {\n                console.warn('audio muted...')\n            })\n        }\n\n        window.JitsiConference.addTrack(local_track).then(() => {\n\n            console.warn('FOO', local_track)\n\n            dispatch(updateUser(window.JitsiConference.myUserId(), {\n                hasTracks: true,\n                [`muted_${local_track.getType()}`]: local_track.isMuted(),\n                [`has_${local_track.getType()}`]: true\n            }))\n\n            // Send lower quality video by default, incase the first time didn't work\n            window.setTimeout(function () {\n                window.JitsiConference.setSenderVideoConstraint(180)\n            }, 1000)\n        })\n    })\n\n    dispatch(updateUser(window.JitsiConference.myUserId(), { hasTracks: true }))\n}\n\n/////////////////\n// REMOTE USERS\n/////////////////\nconst onUserJoined = dispatch => userId => {\n    const user = window.JitsiConference.getParticipantById(userId)\n    console.warn('onUserJoined', user)\n\n    dispatch(addUser({\n        id: userId,\n        activeRoom: 'MAIN',\n        displayName: user.getDisplayName()\n    }))\n}\n\nconst onRemoteTrackAdded = dispatch => track => {\n    if (track.isLocal()) {\n        window.JitsiConference.setSenderVideoConstraint(180)\n        return\n    }\n\n    console.warn('Remote TRACK_ADDED', track.getParticipantId(), track.isMuted(), track)\n\n    track.addEventListener(window.JitsiMeetJS.events.track.TRACK_MUTE_CHANGED, onTrackMuteChanged)\n    track.addEventListener(window.JitsiMeetJS.events.track.LOCAL_TRACK_STOPPED, () =>\n        console.warn('remote track stoped')\n    )\n    track.addEventListener(\n        window.JitsiMeetJS.events.track.TRACK_AUDIO_OUTPUT_CHANGED,\n        (deviceId) =>\n            console.warn(`track audio output device was changed to ${deviceId}`)\n    )\n\n    const userId = track.getParticipantId()\n\n    dispatch(addRemoteUserTrack(userId, track.getType(), track.isMuted()))\n}\n\nconst onRemoteTrackRemoved = dispatch => track => {\n    if (track.isLocal()) {\n        return\n    }\n    console.warn('Remote TRACK_REMOVED', track, track.containers)\n\n    // const userId = track.getParticipantId()\n    // dispatch(removeRemoteTrack(userId, track))\n}\n\nconst onUserLeft = dispatch => userId => {\n    dispatch(removeUser(userId))\n}\n\n/////////////////\n// SIDE ROOMS\n/////////////////\nexport const joinSideRoom = roomName => {\n    const room = window.JitsiConference\n    if (!room) return\n\n    const userId = room.myUserId()\n\n    room.sendCommand(JOIN_MINI_CONFERENCE_CMD, {\n        attributes: {\n            from: userId,\n            to: roomName\n        }\n    })\n\n    // dispatch(updateUser(userId, { activeRoom: roomName }))\n}\n\nconst onSideRoomJoined = dispatch => e => {\n    const userId = e.attributes['from']\n    const to = e.attributes['to']\n\n    console.warn(JOIN_MINI_CONFERENCE_CMD, userId, to)\n\n    if (userId === window.JitsiConference.myUserId()) {\n        const { audio } = getLocalTracks()\n        if (audio) {\n            audio.unmute()\n        }\n    }\n\n    dispatch(updateUser(userId, { activeRoom: to }))\n}\n\nexport const leaveSideRoom = roomName => {\n    const room = window.JitsiConference\n    if (!room) return\n\n    room.removeCommand(JOIN_MINI_CONFERENCE_CMD)\n    room.sendCommandOnce(LEAVE_MINI_CONFERENCE_CMD, {\n        attributes: {\n            from: room.myUserId(),\n            to: roomName\n        }\n    })\n\n    // dispatch(updateUser(room.myUserId(), { activeRoom: 'MAIN' }))\n}\n\nconst onSideRoomLeft = dispatch => e => {\n    if (!window.JitsiConference) return\n\n    const userId = e.attributes['from']\n\n    console.warn(LEAVE_MINI_CONFERENCE_CMD, userId)\n\n    if (userId === window.JitsiConference.myUserId()) {\n        const { audio } = getLocalTracks()\n        audio && audio.mute()\n    }\n\n    dispatch(updateUser(userId, { activeRoom: 'MAIN' }))\n}\n\n//////////////////////\n// USER INTERACTIONS\n//////////////////////\nexport const onVideoMuteToggle = () => {\n    const { video } = getLocalTracks()\n    if (!video) {\n        return\n    }\n    if (video.isMuted()) {\n        video.unmute()\n        window.localStorage.setItem('SHOW_VIDEO', 'true')\n    } else {\n        video.mute()\n        window.localStorage.setItem('SHOW_VIDEO', 'false')\n    }\n}\n\nconst onTrackMuteChanged = dispatch => track => {\n    console.warn('TRACK_MUTE_CHANGED', track)\n\n    if (!track) {\n        return\n    }\n    const userId = track.ownerEndpointId ? track.ownerEndpointId : window.JitsiConference.myUserId()\n\n    dispatch(updateUser(userId, {\n        [`muted_${track.getType()}`]: track.isMuted()\n    }))\n\n}\n\nconst onLocalTrackMuteChanged = () => {}\n\nconst onLocalTrackStopped = () => {}\n\nconst OnLocalTrackAudioOutputChanged = () => {}\n\nexport const setLocalDisplayName = (userId, displayName) => {\n    if (!window.JitsiConference) return\n\n    console.warn('setLocalDisplayName')\n\n    // This will send the event name to other participants\n    window.JitsiConference.setDisplayName(displayName)\n\n    // Save this on localStorage\n    window.localStorage.setItem('DISPLAY_NAME', displayName)\n\n    // Because DISPLAY_NAME_CHANGED is not fired for local users, fire it\n    window.JitsiConference.eventEmitter.emit(window.JitsiMeetJS.events.conference.DISPLAY_NAME_CHANGED, userId, displayName)\n}\n\nexport const setLocalEmoji = (userId, emoji) => {\n    if (!window.JitsiConference) return\n\n    // This will send the event name to other participants\n    window.JitsiConference.sendCommand(SET_EMOJI_CMD, {\n            attributes: {\n                'id': userId,\n                'emoji': emoji\n            }\n        }\n    )\n    window.localStorage.setItem('EMOJI', emoji)\n}\n\nexport const sendPublicMessage = (msg) => {\n    if (!window.JitsiConference) return\n\n    window.JitsiConference.sendMessage(msg)\n}\n\nexport const sendPrivateMessage = (targetId, msg) => {\n    if (!window.JitsiConference) return\n\n    console.warn('sendPrivateTextMessage to ' + targetId)\n    window.JitsiConference.sendPrivateTextMessage(targetId, msg)\n}\n\n/////////////////\n// MISC\n/////////////////\nexport const kickInterruptedConnections = () => {\n    if (!window.JitsiConference) return\n\n    const participants = window.JitsiConference.getParticipants()\n    _.forEach(participants, p => {\n        if (p._connectionStatus === 'interrupted') {\n            console.warn('Kicking participant because of interrupted connection', p._id)\n            window.JitsiConference.kickParticipant(p._id)\n        }\n    })\n}\n\nexport const unload = () => {\n    if (!window.JitsiConference) return\n\n    _.each(window.JitsiConference.getLocalTracks(), track => track.dispose())\n    window.JitsiConference.leave()\n    window.connection.disconnect()\n}\n","import React, {useEffect, useRef, useState} from 'react'\nimport _ from 'lodash'\nimport {getTracks} from '../../utils'\nimport {sendPrivateMessage, sendPublicMessage, setLocalDisplayName, setLocalEmoji} from '../../modules/meeting'\nimport {getUserMessages} from '../../store/messages'\nimport classNames from 'classnames'\nimport './UserDisplay.scss'\nimport {useSelector} from 'react-redux'\n\nconst attach = (track, ref) => track && ref.current && track.attach(ref.current)\n\nconst detachAndDispose = (track, ref) => {\n    if (track && ref.current) {\n        track.detach(ref.current)\n        track.dispose()\n    }\n}\n\nconst UserDisplay = ({id: userId, isLocal, has_audio, has_video, muted_audio, muted_video, displayName, emoji, isAudioActive, isDominantSpeaker}) => {\n\n    const videoRef = useRef(null)\n    const audioRef = useRef(null)\n\n    const [videoTrack, setVideoTrack] = useState(null)\n    const [audioTrack, setAudioTrack] = useState(null)\n\n    const messages = useSelector(getUserMessages(userId))\n\n    useEffect(() => {\n\n        if (has_video) {\n            const {video} = getTracks(userId, isLocal)\n            attach(video, videoRef)\n            setVideoTrack(video)\n        }\n\n        return () => {\n            if (has_audio || has_video) {\n                detachAndDispose(videoTrack, videoRef)\n            }\n        }\n    }, [has_video, videoRef])\n\n    useEffect(() => {\n\n        if (has_audio) {\n            const {audio} = getTracks(userId, isLocal)\n            attach(audio, audioRef)\n            setAudioTrack(audio)\n        }\n\n        return () => {\n            if (has_audio) {\n                detachAndDispose(audioTrack, audioRef)\n            }\n        }\n    }, [has_audio, audioRef])\n\n    const onClick = e => {\n        e.stopPropagation()\n\n        if (isLocal) {\n            //send public message\n            const msg = window.prompt('Say something:')\n            if (msg) {\n                sendPublicMessage(msg)\n            }\n        } else {\n            // send private message\n            const msg = window.prompt(`Say something to ${displayName}:`)\n            if (msg) {\n                sendPrivateMessage(userId, msg)\n            }\n        }\n\n    }\n\n    const onNameClick = e => {\n        e.stopPropagation()\n\n        if (!isLocal) return;\n\n        const newName = window.prompt('Display Name???')\n        if (newName) {\n            setLocalDisplayName(userId, newName)\n        }\n    }\n\n    const onEmojiClick = e => {\n        e.stopPropagation()\n\n        if (!isLocal) return;\n\n        // TODO(DROR): Add a menu item here instead of prompt\n\n        const newEmoji = window.prompt('what emoji? https://getemoji.com/')\n        if (newEmoji) {\n            setLocalEmoji(userId, newEmoji)\n        }\n    }\n\n    const videoClassNames = classNames('user-display video person', {\n        'video_self': isLocal,\n        'remote_participant': !isLocal,\n        'no_video': !has_video || muted_video,\n        'no_audio': !has_audio || muted_audio,\n        'muted': !isAudioActive && !isLocal,\n        \"dominant\": isDominantSpeaker,\n        'local_muted': !isAudioActive && isLocal,\n    })\n\n    return (\n        <div className={videoClassNames} onClick={onClick}>\n            <div className=\"emoji\" onClick={onEmojiClick}>{emoji}</div>\n            <div className=\"id\" onClick={onNameClick}>{displayName} {userId}</div>\n            {/*{_.map(messages, ({msg, key}) => (*/}\n            {/*    <div key={key} className=\"chat\">{msg}</div>*/}\n            {/*))}*/}\n            <div className=\"in\"/>\n            {has_video && (\n                <video autoPlay=\"1\" ref={videoRef}/>\n            )}\n            {has_audio && (\n                <audio muted={isLocal || !isAudioActive} autoPlay=\"1\" ref={audioRef}/>\n            )}\n        </div>\n    )\n}\n\nexport default UserDisplay\n","import UserDisplay from './UserDisplay'\n\nexport default UserDisplay","import React, { useCallback } from 'react'\nimport _ from 'lodash'\nimport UserDisplay from './index'\n\nconst UserList = ({ users, isAudioActive }) => {\n\n  const renderUser = useCallback(user => (\n    <UserDisplay key={`user-display-${user.id}`} {...user} isAudioActive={isAudioActive}/>\n  ), [users])\n\n  return _.map(_.orderBy(users, 'id'), renderUser)\n}\n\nexport default UserList\n","import SideRoom from './SideRoom'\n\nexport default SideRoom","import React from 'react'\nimport _ from 'lodash'\nimport classNames from 'classnames'\nimport { useSelector } from 'react-redux'\nimport UserList from '../UserDisplay/UserList'\nimport { getLocalUser, getUsersByActiveRoom } from '../../store/users'\nimport { joinSideRoom } from '../../modules/meeting'\nimport './SideRoom.scss'\n\nexport default ({ name, maxSeats }) => {\n\n  const users = useSelector(getUsersByActiveRoom(name))\n  // console.warn('sideRoomUsers=' + JSON.stringify(users))\n\n  const userCount = _.size(users)\n  const emptySeatCount = maxSeats - userCount\n\n  const localUser = useSelector(getLocalUser)\n\n  const localUserInRoom = localUser.activeRoom === name\n\n  const onFreeSeatClick = () => {\n    !localUserInRoom && joinSideRoom(name)\n  }\n\n  return (\n    <div className=\"side-room\" onClick={e => e.stopPropagation()}>\n      <div className=\"bg\"/>\n      <UserList users={users} roomName={name} isAudioActive={localUserInRoom}/>\n      {_.map(Array(emptySeatCount), (o, i) => {\n        return (\n          <div className={classNames(\"user-display free-seat\")} onClick={onFreeSeatClick}>\n            <div className=\"id\">Speak up</div>\n            <div className=\"in\"/>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n","import YouTubePlayer from './YouTubePlayer'\n\nexport default YouTubePlayer","import React, { useEffect, useState } from 'react'\nimport YouTube from 'react-youtube'\n\n\nconst YouTubePlayer = ({volume, ...props}) => {\n\n  const [player, setPlayer] = useState(null)\n\n  useEffect(() => {\n    if (player) {\n      player.setVolume(volume)\n    }\n  }, [volume])\n\n  const onReady = e => {\n    setPlayer(e.target)\n    props.onReady && props.onReady(e)\n  }\n\n  return (\n    <YouTube {...props} onReady={onReady} />\n  )\n}\n\nexport default YouTubePlayer\n","import ChatMessage from \"./ChatMessage\";\n\nexport default ChatMessage\n","import React from 'react'\nimport './ChatMessage.scss'\nimport classNames from \"classnames\";\n\nconst nice_date = (date) => {\n    const hours_str = date.getHours().toString().padStart(2, 0)\n    const minutes_str = date.getMinutes().toString().padStart(2, 0)\n    return `${hours_str}:${minutes_str}`\n}\n\nconst getNick = (userId) => {\n    const participant = window.JitsiConference.getParticipantById(userId)\n    if (!participant) {\n        return \"Anonymous\"\n    }\n    return participant.getDisplayName()\n}\n\nconst ChatMessage = ({id: userId, text, ts, recipient}) => {\n\n    const messageClassNames = classNames('text-message', {\n        'private': recipient !== \"public\",\n        'public': recipient === \"public\",\n    })\n\n    return (\n        <div className={messageClassNames}>\n            <span class=\"nick\">{getNick(userId)} ({nice_date(ts)})</span><span class=\"text\">{text}</span>\n        </div>\n    )\n}\n\nexport default ChatMessage\n","import ChatDrawer from './ChatDrawer'\n\nexport default ChatDrawer\n","import _ from 'lodash'\nimport React from 'react'\nimport './ChatDrawer.scss'\nimport {useSelector} from \"react-redux\";\nimport {getAllMessages} from \"../../store/messages\";\nimport ChatMessage from \"../ChatMessage\";\n\nconst ChatDrawer = ({}) => {\n\n    const messages = useSelector(getAllMessages)\n\n    return (\n        <div className=\"right-sidebar\">\n            {_.map(_.orderBy(messages, ['ts'], ['desc']), (msg) => {\n                return (\n                    <ChatMessage key={msg.ts} ts={msg.ts} text={msg.text} id={msg.id} recipient={msg.recipient}/>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ChatDrawer\n","import Room from './Room'\n\nexport default Room","import React from 'react'\nimport _ from 'lodash'\nimport classNames from 'classnames'\nimport {useSelector} from 'react-redux'\nimport {videoArtPlayerConfig} from '../../config/config.videos'\nimport {leaveSideRoom} from '../../modules/meeting'\nimport {getLocalUser, getUsersByActiveRoom} from '../../store/users'\nimport UserList from '../UserDisplay/UserList'\nimport SideRoom from '../SideRoom'\nimport YouTubePlayer from '../YouTubePlayer'\nimport './Room.scss'\nimport ChatDrawer from \"../ChatDrawer\";\n\nconst Room = ({roomName, withVideoArt}) => {\n\n    const room = useSelector(state => state.room)\n    const mainAreaUsers = useSelector(getUsersByActiveRoom('MAIN'))\n\n    const localUser = useSelector(getLocalUser)\n\n    if (_.isEmpty(localUser)) {\n        return null\n    }\n\n    const userInMainArea = localUser.activeRoom === 'MAIN'\n\n    const onMeetingAreaClick = () => {\n        !userInMainArea && leaveSideRoom(localUser.activeRoom)\n    }\n\n    return (\n        <div className={classNames('room', _.toLower(roomName))}>\n            <div className=\"bg\"/>\n            {withVideoArt && (\n                <div className=\"video-art-top\">\n                    <div className=\"big-video-container\">\n                        <YouTubePlayer {...videoArtPlayerConfig}/>\n                    </div>\n                </div>\n            )}\n            <div className=\"main-area\" onClick={onMeetingAreaClick}>\n                <UserList users={mainAreaUsers} roomName=\"MAIN\"/>\n                {_.map(room.sideRooms, (sideRoom, i) => (\n                    <SideRoom key={`side-room-${i}`} {...sideRoom}/>\n                ))}\n                <ChatDrawer/>\n            </div>\n        </div>\n    )\n}\n\nexport default Room\n","import BottomNav from './BottomNav'\n\nexport default BottomNav","import React from 'react'\nimport './BottomNav.scss'\nimport { onVideoMuteToggle, changeConference } from '../../modules/meeting'\nimport { ROOMS } from '../../consts'\nimport { useDispatch } from 'react-redux'\n\nconst BottomNav = ({ roomName }) => {\n\n    const dispatch = useDispatch()\n\n    const toggleFullscreen = () => {\n        if (!document.fullscreenElement) {\n            document.documentElement.requestFullscreen()\n        } else {\n            if (document.exitFullscreen) {\n                document.exitFullscreen()\n            }\n        }\n    }\n\n    const goToRoom = roomConfig => () => dispatch(changeConference(roomConfig))\n\n    return (\n        <div className=\"bottom-nav\">\n            {roomName !== 'block' && (\n                <div className=\"button button-to-block\" onClick={goToRoom(ROOMS.block)}/>\n            )}\n            {roomName !== 'toilet' && (\n                <div className=\"button button-to-toilet\" onClick={goToRoom(ROOMS.toilet)}/>\n            )}\n            <div className=\"button mute-toggle\" onClick={onVideoMuteToggle}/>\n            <div className=\"button fullscreen-toggle\" onClick={toggleFullscreen}/>\n        </div>\n    )\n}\n\nexport default BottomNav\n","import React from 'react'\nimport Room from './components/Room'\nimport BottomNav from './components/BottomNav'\nimport { playSoundtrack } from './config/config.dev'\nimport { soundtrackPlayerConfig } from './config/config.videos'\nimport { useSelector } from 'react-redux'\nimport { getLocalUser } from './store/users'\nimport YouTubePlayer from './components/YouTubePlayer'\nimport { getRoom } from './store/room'\n\nfunction App () {\n\n    const { roomName } = useSelector(getRoom)\n\n    const localUser = useSelector(getLocalUser)\n\n    const soundtrackVolume = localUser && localUser.activeRoom === 'MAIN' ? 100 : 40\n\n    return (\n        <div className=\"app\">\n            <Room roomName={roomName} withVideoArt={roomName === 'block'}/>\n            <BottomNav roomName={roomName}/>\n            {playSoundtrack && (\n                <YouTubePlayer {...soundtrackPlayerConfig} volume={soundtrackVolume}/>\n            )}\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { applyMiddleware, combineReducers, createStore, compose } from 'redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n// reducers\nimport roomReducer from './room'\nimport usersReducer from './users'\nimport messagesReducer from './messages'\n\nconst rootReducer = combineReducers({\n  users: usersReducer,\n  room: roomReducer,\n  messages: messagesReducer,\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(logger, thunk)\n  )\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/main.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport { initJitsi, kickInterruptedConnections, unload } from './modules/meeting'\nimport store from './store'\n\n\n// init Jitsi\nwindow.JitsiMeetJS.setLogLevel(window.JitsiMeetJS.logLevels.ERROR)\n\ninitJitsi(store)\n\nsetInterval(kickInterruptedConnections, 5000);\n\n// TODO (ASAF) - check if both needed\nwindow.addEventListener(\"beforeunload\", unload)\nwindow.addEventListener(\"unload\", unload)\n\n// init React\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}