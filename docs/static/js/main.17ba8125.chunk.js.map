{"version":3,"sources":["utils.js","consts.js","store/room.js","store/users.js","store/messages.js","store/devices.js","modules/meeting.js","config/config.videos.js","hooks/useOutsideClick.js","components/Popup/index.js","components/Popup/Popup.js","components/AutoHide/index.js","components/AutoHide/AutoHide.js","components/EmojiSelection/index.js","components/EmojiSelection/EmojiSelection.js","components/SpeechBubble/index.js","components/SpeechBubble/SpeechBubble.js","components/TextInput/index.js","components/TextInput/TextInput.js","components/ChatMessage/index.js","components/ChatMessage/ChatMessage.js","components/ChatDrawer/index.js","components/ChatDrawer/ChatDrawer.js","components/Chat/index.js","components/Chat/Chat.js","components/Chat/ChatMessagePreview.js","components/UserDisplay/UserDisplay.js","components/UserDisplay/index.js","components/UserDisplay/UserList.js","components/SideRoom/index.js","components/SideRoom/SideRoom.js","components/YouTubePlayer/index.js","components/YouTubePlayer/YouTubePlayer.js","components/YouTubeVideoArtPlayer/index.js","components/YouTubeVideoArtPlayer/YouTubeVideoArtPlayer.js","components/Room/index.js","components/Room/Room.js","components/Options/options.js","components/BottomNav/index.js","components/BottomNav/BottomNav.js","App.js","serviceWorker.js","store/index.js","index.js"],"names":["makeReducer","actionHandlers","initialState","state","action","type","getFromLocalStorage","key","defaultValue","value","window","localStorage","getItem","getLocalTracks","JitsiConference","audio","getLocalAudioTrack","video","getLocalVideoTrack","getTracks","userId","isLocal","tracks","getParticipantById","_","find","t","getType","ROOMS","block","roomName","jitsiRoomName","sideRooms","toilet","name","maxSeats","setRoom","room","setItem","payload","getRoom","roomReducer","SET_ROOM","addUser","user","updateUser","update","getLocalUser","users","getUsersByActiveRoom","filter","u","activeRoom","reduceUpdateUser","id","usersReducer","ADD_USER","REMOVE_USER","omit","UPDATE_USER","ADD_REMOTE_USER_TRACK","trackType","isMuted","UPDATE_DOMINANT_SPEAKER","dominantUserId","console","warn","forEach","isDominantSpeaker","getPublicMessages","messages","m","recipient","messagesReducer","PUSH_MESSAGE","msg","DELETE_ALL_MESSAGES","DELETE_MESSAGE","getInputDevices","devices","devicesReducer","SET_INPUT_DEVICE","new_state","audio_input_id","video_input_id","SET_AVAILABLE_INPUT_DEVICES","audio_inputs","video_inputs","connect","dispatch","getState","JitsiMeetJS","events","connection","CONNECTION_ESTABLISHED","CONNECTION_FAILED","CONNECTION_DISCONNECTED","JitsiConnection","jitsiConfig","onConnectionSuccess","roomConfig","joinConference","onConnectionFailed","e","error","addEventListener","disconnect","removeEventListener","undefined","JSON","stringify","initJitsiConference","conference","DISPLAY_NAME_CHANGED","MESSAGE_RECEIVED","CONFERENCE_JOINED","PRIVATE_MESSAGE_RECEIVED","USER_JOINED","TRACK_ADDED","TRACK_REMOVED","USER_LEFT","DOMINANT_SPEAKER_CHANGED","on","displayName","addCommandListener","attributes","emoji","conference_id","globalUID","text","ts","msg_object","parse","from_me","to_me","Date","getTime","onConferenceJoined","onUserJoined","onRemoteTrackAdded","onRemoteTrackRemoved","onUserLeft","onSideRoomJoined","onSideRoomLeft","join","myUserId","length","chars","result","i","Math","floor","random","randomString","setLocalDisplayName","setLocalEmoji","setGlobalUID","create_local_track_options","cameraDeviceId","micDeviceId","constraints","createLocalTracks","then","onLocalTracks","catch","in_tracks","mediaDevices","isDeviceListAvailable","enumerateDevices","d","kind","setAvailableInputDevices","map","local_track","getDeviceId","track","TRACK_MUTE_CHANGED","onTrackMuteChanged","setSenderVideoConstraint","unmute","mute","addTrack","hasTracks","setTimeout","getDisplayName","getParticipantId","LOCAL_TRACK_STOPPED","TRACK_AUDIO_OUTPUT_CHANGED","deviceId","addRemoteUserTrack","containers","removeUser","to","soundcloud","setVolume","onVideoMuteToggle","ownerEndpointId","setDisplayName","eventEmitter","emit","sendCommand","sendPublicMessage","sendPrivateMessage","targetGlobalUID","targetDisplayName","sendMessage","unload","each","dispose","leave","soundtrackPlayerConfig","containerClassName","videoId","options","playlist","width","height","playerVars","autoplay","controls","showinfo","modestbranding","loop","fs","cc_load_policy","iv_load_policy","autohide","disablekb","start","onReady","target","playVideo","videoArtArray","totalVideoArtPlayTime","sum","getVideoArtTotalPlayTime","currentVideoArtPlayerIx","delta","round","currentVideoArtIx","currentTimeInLoop","useOutsideClick","ref","callback","handleClick","current","contains","useEffect","document","Popup","children","className","onOutsideClick","useRef","classNames","AutoHide","refreshKey","ttl","hidden","useState","startedHidden","setStartedHidden","isVisible","setIsVisible","timer","clearTimeout","EmojiList","onSelection","localUser","useSelector","onEmojiClick","stopPropagation","EMOJIES","onClick","selected","SpeechBubble","ChatInput","submit","dismiss","focus","innerRef","html","onChange","onKeyPress","isEmpty","charCode","preventDefault","DOMParser","parseFromString","body","textContent","onKeyDown","keyCode","ChatMessage","isPrivate","messageClassNames","getFromText","getToText","date","hours_str","getHours","toString","padStart","minutes_str","getMinutes","nice_date","ChatDrawer","messagesSelector","maxHeight","styles","size","css","orderBy","toISOString","concat","Chat","maxDrawerHeight","isSending","setIsSending","recipientGlobalUID","localUserGlobalUID","ChatMessagePreview","message","keepHidden","setKeepHidden","attach","detachAndDispose","detach","UserDisplay","isAudioActive","has_audio","has_video","muted_audio","muted_video","videoRef","audioRef","videoTrack","setVideoTrack","audioTrack","setAudioTrack","popup","setPopup","isChatOpen","setIsChatOpen","bubbleMessage","last","ts_diff_secs","abs","getUserLastPublicMessage","lastPrivateMessageFromUser","getLastPrivateMessageFromUser","renderInputBubble","placeholder","onHeightChange","hidePopup","videoClassNames","popupOpen","isNil","shiftKey","newName","autoPlay","muted","UserList","renderUser","useCallback","SideRoom","userInside","emptySeatCount","localUserInRoom","onFreeSeatClick","from","joinSideRoom","ClassNames","Array","o","YouTubePlayer","volume","props","player","setPlayer","onEnd","YouTubeVideoArtPlayer","videoArtIndex","setVideoArtIndex","seek","videoArtIx","videoArtTime","seekTo","Room","withVideoArt","mainAreaUsers","userInMainArea","toLower","removeCommand","sendCommandOnce","leaveSideRoom","sideRoom","MediaOption","input","local_input_id","useDispatch","inputClassNames","isDeviceChangeAvailable","removeTrack","switchInput","label","Options","audio_input","video_input","BottomNav","optionsVisible","setOptionsVisible","goToRoom","changeConference","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","App","soundtrackVolume","playSoundtrack","Boolean","location","hostname","match","store","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","logger","thunk","setLogLevel","logLevels","ERROR","URLSearchParams","search","get","setInitialRoom","init","setInterval","participants","getParticipants","p","_connectionStatus","_id","kickParticipant","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17ba8125.chunk.js","sourcesContent":["import _ from 'lodash'\n\nexport const makeReducer = (actionHandlers, initialState) => {\n    return (state = initialState, action) => {\n        if (actionHandlers[action.type]) {\n            return actionHandlers[action.type](state, action)\n        }\n        return state\n    }\n}\n\nexport const getFromLocalStorage = (key, defaultValue) => {\n    let value = window.localStorage.getItem(key)\n    return !value || value === 'null' ? defaultValue : value\n}\n\nexport const getLocalTracks = () => {\n    if (!window.JitsiConference) return {}\n\n    return {\n        audio: window.JitsiConference.getLocalAudioTrack(),\n        video: window.JitsiConference.getLocalVideoTrack()\n    }\n}\n\nexport const getTracks = (userId, isLocal) => {\n    if (isLocal) return getLocalTracks()\n\n    const participant = window.JitsiConference.getParticipantById(userId)\n    const tracks = participant.getTracks()\n    // const types = _.map(tracks, t => t.getType())\n    // console.warn('remote tracks = ' + JSON.stringify(types))\n    return {\n        audio: _.find(tracks, t => t.getType() === 'audio'),\n        video: _.find(tracks, t => t.getType() === 'video'),\n    }\n}\n\n\nexport const randomString = (length) => {\n    const chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    let result = '';\n    for (let i = length; i > 0; --i) result += chars[Math.floor(Math.random() * chars.length)];\n    return result;\n}\n","export const ROOMS = {\n  block: {\n    roomName: 'block',\n    jitsiRoomName: 'block_demo_block',\n    sideRooms: [],\n  },\n  toilet: {\n    roomName: 'toilet',\n    jitsiRoomName: 'block_demo_toiletsss',\n    sideRooms: [{ name: 'second_room', maxSeats: 5 }],\n  }\n}\n","import { makeReducer, getFromLocalStorage } from '../utils'\nimport { ROOMS } from '../consts'\n\nexport const setInitialRoom = () => {\n    // try url param\n    const urlParams = new URLSearchParams(window.location.search)\n    let roomName = urlParams.get('room')\n    if (!roomName) {\n        // try local storage\n        roomName = getFromLocalStorage('ROOM_NAME')\n    }\n    if (!roomName) {\n      // set default\n        roomName = 'block'\n    }\n\n    return setRoom(ROOMS[roomName])\n}\n\nexport const setRoom = room => {\n    window.localStorage.setItem('ROOM_NAME', room.roomName)\n    return {\n        type: 'SET_ROOM',\n        payload: { room },\n    }\n}\n\nexport const getRoom = state => state.room\n\nconst roomReducer = makeReducer({\n    SET_ROOM: (state, action) => action.payload.room,\n}, {})\n\nexport default roomReducer","import _ from 'lodash'\nimport {makeReducer} from '../utils'\n\nexport const addUser = user => ({\n    type: 'ADD_USER',\n    payload: {user},\n})\n\nexport const removeUser = userId => ({\n    type: 'REMOVE_USER',\n    payload: {userId},\n})\n\nexport const updateUser = (userId, update) => ({\n    type: 'UPDATE_USER',\n    payload: {userId, update},\n})\n\nexport const addRemoteUserTrack = (userId, trackType, isMuted) => ({\n    type: 'ADD_REMOTE_USER_TRACK',\n    payload: {userId, trackType, isMuted},\n})\n\nexport const updateDominantSpeaker = userId => ({\n    type: 'UPDATE_DOMINANT_SPEAKER',\n    payload: {userId},\n})\n\nexport const getUser = userId => state => _.get(state.users, userId)\n\nexport const getUserByGlobalUID = globalUID => state => _.find(state.users, {globalUID: globalUID})\n\nexport const getLocalUser = state => _.find(state.users, {isLocal: true})\n\nexport const getRemoteUsers = state => _.pickBy(state.users, u => !u.isLocal)\n\nexport const getUsersByActiveRoom = roomName => state => _.filter(state.users, u => u.activeRoom === roomName)\n\nconst reduceUpdateUser = (state, user, update) => {\n    return {\n        ...state,\n        [user.id]: {\n            ...user,\n            ...update,\n        },\n    }\n}\n\nconst usersReducer = makeReducer({\n    ADD_USER: (state, action) => {\n        const {user} = action.payload\n        return {\n            ...state,\n            [user.id]: user\n        }\n    },\n    REMOVE_USER: (state, action) => {\n        const {userId} = action.payload\n        return _.omit(state, userId)\n    },\n    UPDATE_USER: (state, action) => {\n        const {userId, update} = action.payload\n        const user = state[userId] || {}\n\n        return reduceUpdateUser(state, user, update)\n    },\n    ADD_REMOTE_USER_TRACK: (state, action) => {\n        const {userId, trackType, isMuted} = action.payload\n        const user = state[userId] || {}\n\n        const update = {\n            [`has_${trackType}`]: true,\n            [`muted_${trackType}`]: isMuted\n        }\n\n        return reduceUpdateUser(state, user, update)\n    },\n    UPDATE_DOMINANT_SPEAKER: (state, action) => {\n        const dominantUserId = action.payload.userId\n\n\n        console.warn(\"UPDATE_DOMINANT_SPEAKER\", action)\n\n        _.forEach(state, (user) => {\n            user.isDominantSpeaker = (user.id === dominantUserId)\n        })\n\n        return state\n    }\n}, {})\n\nexport default usersReducer\n","import _ from 'lodash'\nimport {makeReducer} from '../utils'\n\nexport const pushMessage = (msg) => dispatch => {\n    const key = `${msg.id}-${(new Date()).getTime()}`\n\n    dispatch({\n        type: 'PUSH_MESSAGE',\n        payload: {msg},\n    })\n\n    // setTimeout(() => dispatch(deleteMessage(key)), 7000)\n}\n\nexport const deleteMessage = key => ({\n    type: 'DELETE_MESSAGE',\n    payload: {key},\n})\n\nexport const deleteAllMessages = () => ({\n    type: 'DELETE_ALL_MESSAGES'\n})\n\nexport const getUserMessages = userId => state => _.filter(state.messages, m => m.id === userId)\n\n// Get the last message from this user, sent in the last 10 secs\nexport const getUserLastMessage = (globalUID, localUserGlobalUID) => state => _.last(_.filter(state.messages, (m) => {\n    let ts_diff_secs = Math.abs(((new Date()) - m.ts) / 1000)\n    return m.globalUID === globalUID && (m.recipient === 'public' || m.recipient === localUserGlobalUID) && (ts_diff_secs < 10)\n}))\n\nexport const getUserLastPublicMessage = (globalUID, localUserGlobalUID) => state => _.last(_.filter(state.messages, (m) => {\n    let ts_diff_secs = Math.abs(((new Date()) - m.ts) / 1000)\n    return m.globalUID === globalUID && m.recipient === 'public' && (ts_diff_secs < 10)\n}))\n\nexport const getLastPrivateMessageFromUser = (globalUID, localUserGlobalUID) => state => _.last(_.filter(state.messages, (m) => {\n    let ts_diff_secs = Math.abs(((new Date()) - m.ts) / 1000)\n    return m.recipient === localUserGlobalUID && m.globalUID === globalUID && (ts_diff_secs < 10)\n}))\n\nexport const getAllMessages = state => state.messages\n\nexport const getPublicMessages = state => _.filter(state.messages, m => m.recipient === 'public')\n\nexport const getPrivateMessages = (recipientGlobalUID, localUserGlobalUID) => state => _.filter(state.messages, m => {\n    return (m.globalUID === recipientGlobalUID && m.recipient === localUserGlobalUID)\n        || (m.globalUID === localUserGlobalUID && m.recipient === recipientGlobalUID)\n})\n\nconst messagesReducer = makeReducer({\n    PUSH_MESSAGE: (state, action) => {\n        return [...state, action.payload.msg]\n    },\n    DELETE_ALL_MESSAGES: (state, action) => {\n        return []\n    },\n    DELETE_MESSAGE: (state, action) => {\n        return _.filter(state, m => m.key !== action.payload.key)\n    },\n}, [])\n\nexport default messagesReducer\n","import _ from 'lodash'\nimport {makeReducer} from '../utils'\n\nexport const setAvailableInputDevices = (audio_inputs, video_inputs) => ({\n    type: 'SET_AVAILABLE_INPUT_DEVICES',\n    payload: {audio_inputs, video_inputs},\n})\n\nexport const setInputDevice = (type, id) => ({\n    type: 'SET_INPUT_DEVICE',\n    payload: {type, id},\n})\n\nexport const getInputDevices = state => {\n    // TODO(ASAF): what did I do wrong here?\n    // console.error(\"getInputDevices\", state)\n    return state.devices\n}\n\nconst devicesReducer = makeReducer({\n    SET_INPUT_DEVICE: (state, action) => {\n        const new_state = {...state}\n        if (action.payload.type===\"audio\") {\n            new_state.audio_input_id = action.payload.id\n        }\n        else {\n            new_state.video_input_id = action.payload.id\n        }\n        return new_state\n    },\n    SET_AVAILABLE_INPUT_DEVICES: (state, action) => {\n        const audio_inputs = action.payload.audio_inputs\n        const video_inputs = action.payload.video_inputs\n        return {\n            ...state,\n            audio_inputs: audio_inputs,\n            video_inputs: video_inputs\n        }\n        // return [...state, action.payload.msg]\n    },\n\n}, {\n    audio_inputs: [],\n    video_inputs: [],\n    video_input_id:null,\n    audio_input_id:null\n})\n\nexport default devicesReducer\n","import _ from 'lodash'\nimport {getFromLocalStorage, getLocalTracks, randomString} from '../utils'\nimport {getRoom, setRoom} from '../store/room'\nimport {\n    addUser,\n    updateUser,\n    addRemoteUserTrack,\n    removeUser,\n    updateDominantSpeaker,\n} from '../store/users'\nimport {deleteAllMessages, pushMessage} from '../store/messages'\nimport {jitsi as jitsiConfig} from '../config/config.dev'\nimport {setAvailableInputDevices, setInputDevice} from \"../store/devices\";\n\nconst JOIN_MINI_CONFERENCE_CMD = 'JOIN_MINI_CONFERENCE'\nconst LEAVE_MINI_CONFERENCE_CMD = 'LEAVE_MINI_CONFERENCE'\nconst SET_GLOBAL_UID_CMD = 'SET_GLOBAL_UID'\nconst SET_EMOJI_CMD = 'SET_EMOJI'\nconst DEFAULT_EMOJI = '😷'\nconst DEFAULT_USERNAME = 'anonymous'\n\nexport const initJitsi = store => {\n    console.warn('initJitsi')\n\n    window.JitsiMeetJS.init(jitsiConfig)\n\n    connect(store)\n}\n\nconst connect = ({dispatch, getState}) => {\n    const {CONNECTION_ESTABLISHED, CONNECTION_FAILED, CONNECTION_DISCONNECTED} = window.JitsiMeetJS.events.connection\n\n    window.JitsiConnection = new window.JitsiMeetJS.JitsiConnection(null, null, jitsiConfig)\n\n    const onConnectionSuccess = () => {\n        console.warn('onConnectionSuccess')\n\n        const roomConfig = getRoom(getState())\n        joinConference(dispatch, roomConfig)\n    }\n\n    const onConnectionFailed = e => {\n        console.error('Connection Failed!', e)\n    }\n\n    const disconnect = () => {\n        window.JitsiConnection.removeEventListener(CONNECTION_ESTABLISHED, onConnectionSuccess)\n        window.JitsiConnection.removeEventListener(CONNECTION_FAILED, onConnectionFailed)\n        window.JitsiConnection.removeEventListener(CONNECTION_DISCONNECTED, disconnect)\n    }\n\n    // bind connection events\n    window.JitsiConnection.addEventListener(CONNECTION_ESTABLISHED, onConnectionSuccess)\n    window.JitsiConnection.addEventListener(CONNECTION_FAILED, onConnectionFailed)\n    window.JitsiConnection.addEventListener(CONNECTION_DISCONNECTED, disconnect)\n\n    window.JitsiConnection.connect(undefined)\n}\n\n/////////////////\n// ROOMS\n/////////////////\nconst joinConference = (dispatch, roomConfig) => {\n    if (!window.JitsiConnection) return\n\n    console.warn('roomConfig=' + JSON.stringify(roomConfig))\n\n    const JitsiConference = window.JitsiConnection.initJitsiConference(roomConfig.jitsiRoomName, jitsiConfig)\n\n    const {\n        DISPLAY_NAME_CHANGED, MESSAGE_RECEIVED, PRIVATE_MESSAGE_RECEIVED,\n        CONFERENCE_JOINED, USER_JOINED, TRACK_ADDED, TRACK_REMOVED, USER_LEFT,\n        DOMINANT_SPEAKER_CHANGED\n    } = window.JitsiMeetJS.events.conference\n\n    JitsiConference.on(DISPLAY_NAME_CHANGED, (id, displayName) => {\n        dispatch(updateUser(id, {displayName}))\n    })\n\n    JitsiConference.on(DOMINANT_SPEAKER_CHANGED, (id) => {\n        dispatch(updateDominantSpeaker(id))\n    })\n\n    JitsiConference.addCommandListener(SET_EMOJI_CMD, e => {\n        const userId = e.attributes['id']\n        const emoji = e.attributes['emoji']\n\n        console.warn(SET_EMOJI_CMD, userId, emoji)\n\n        dispatch(updateUser(userId, {emoji}))\n    })\n\n    JitsiConference.addCommandListener(SET_GLOBAL_UID_CMD, e => {\n\n        const conference_id = e.attributes['conference_id']\n        const globalUID = e.attributes['globalUID']\n\n        console.warn(SET_GLOBAL_UID_CMD, conference_id, globalUID, e.attributes)\n\n        dispatch(updateUser(conference_id, {globalUID}))\n    })\n\n    JitsiConference.on(MESSAGE_RECEIVED, function (id, text, ts) {\n        // TODO(DROR): ts can be none here,\n        console.warn('MESSAGE_RECEIVED', id, text, ts)\n        let msg_object = null\n        try {\n            msg_object = JSON.parse(text)\n\n        } catch (e) {\n            return;\n        }\n\n        const globalUID = getFromLocalStorage('GLOBAL_UID')\n        msg_object.from_me = msg_object.globalUID === globalUID\n        msg_object.to_me = msg_object.recipient === globalUID\n\n        if (msg_object.from_me || msg_object.to_me || msg_object.recipient === \"public\") {\n            dispatch(pushMessage({\n                ...msg_object,\n                ts: ts ? new Date(Date.parse(ts)) : new Date(),  // ts is only sent when we refresh\n            }))\n        }\n\n    })\n\n\n    JitsiConference.on(CONFERENCE_JOINED, onConferenceJoined(dispatch))\n    JitsiConference.on(USER_JOINED, onUserJoined(dispatch))\n    JitsiConference.on(TRACK_ADDED, onRemoteTrackAdded(dispatch))\n    JitsiConference.on(TRACK_REMOVED, onRemoteTrackRemoved(dispatch))\n    JitsiConference.on(USER_LEFT, onUserLeft(dispatch))\n\n    JitsiConference.addCommandListener(JOIN_MINI_CONFERENCE_CMD, onSideRoomJoined(dispatch))\n    JitsiConference.addCommandListener(LEAVE_MINI_CONFERENCE_CMD, onSideRoomLeft(dispatch))\n\n    window.JitsiConference = JitsiConference\n\n    dispatch(setRoom(roomConfig))\n\n    JitsiConference.join()\n}\n\nexport const changeConference = roomConfig => dispatch => {\n    if (!window.JitsiConference) return\n\n    window.JitsiConference.leave()\n        .then(() => {\n            // Just incase we left from within the sideroom\n            window.soundcloud && window.soundcloud.setVolume(100)\n\n            dispatch(deleteAllMessages())\n            joinConference(dispatch, roomConfig)\n        })\n}\n\nexport const switchInput = (type, deviceId) => dispatch => {\n    if (!window.JitsiMeetJS.mediaDevices.isDeviceChangeAvailable(type)) {\n        console.error(\"no isDeviceChangeAvailable()\")\n        return\n    }\n    let local_track = null\n    if (type === \"audio\") {\n        local_track = window.JitsiConference.getLocalAudioTrack()\n    } else {\n        local_track = window.JitsiConference.getLocalVideoTrack()\n    }\n\n    console.error(\"switchInput\", local_track)\n\n    window.JitsiConference.removeTrack(local_track).then(() => {\n        local_track && local_track.dispose()\n\n        // We want to explicitly ask for the device we last used\n        // for dror for example, switching rooms selects the snap camera instead of the regular\n        // This fixes it\n        const create_local_track_options = {\n            devices: [type],\n        }\n\n        if (type === \"audio\") {\n            create_local_track_options[\"micDeviceId\"] = deviceId\n        } else {\n            create_local_track_options[\"cameraDeviceId\"] = deviceId\n            create_local_track_options[\"constraints\"] = {\"height\": 180, \"width\": 180}\n        }\n\n        window.JitsiMeetJS.createLocalTracks(create_local_track_options)\n            .then(onLocalTracks(dispatch))\n            .catch((error) => {\n                throw error\n            })\n\n    })\n\n}\n\n\n/////////////////\n// LOCAL USER\n\n\n/////////////////\nconst onConferenceJoined = dispatch => () => {\n    console.warn('onConferenceJoined')\n\n    const userId = window.JitsiConference.myUserId()\n\n    const displayName = getFromLocalStorage('DISPLAY_NAME', DEFAULT_USERNAME)\n    const emoji = getFromLocalStorage('EMOJI', DEFAULT_EMOJI)\n    const globalUID = getFromLocalStorage('GLOBAL_UID', randomString(16))\n\n    dispatch(addUser({\n        id: userId,\n        globalUID: globalUID,\n        isLocal: true,\n        displayName: displayName,\n        emoji: emoji,\n        activeRoom: 'MAIN',\n    }))\n\n    // Send the cached display_name and emoji to other participants\n    setLocalDisplayName(userId, displayName)\n    setLocalEmoji(emoji)\n    setGlobalUID(globalUID)\n\n    // We want to explicitly ask for the device we last used\n    // for dror for example, switching rooms selects the snap camera instead of the regular\n    // This fixes it\n    const create_local_track_options = {\n        devices: [\"video\", \"audio\"],\n        cameraDeviceId: getFromLocalStorage(\"video_device_id\", null),\n        micDeviceId: getFromLocalStorage(\"audio_device_id\", null),\n        constraints: {\"height\": 180, \"width\": 180}\n    }\n\n    // Try to get audio/video. TODO(DROR): This might fail, we need the users's help\n    console.error(\"will run createLocalTracks\");\n    window.JitsiMeetJS.createLocalTracks(create_local_track_options)\n        .then(onLocalTracks(dispatch))\n        .catch((error) => {\n            throw error\n        })\n}\n\nconst onLocalTracks = dispatch => in_tracks => {\n\n    console.error(\"onLocalTracks\", in_tracks)\n\n    // Try to get device list\n    if (window.JitsiMeetJS.mediaDevices.isDeviceListAvailable()) {\n        window.JitsiMeetJS.mediaDevices.enumerateDevices((devices) => {\n            const audio_inputs = _.filter(devices, (d) => d.kind === \"audioinput\")\n            const video_inputs = _.filter(devices, (d) => d.kind === \"videoinput\")\n            dispatch(setAvailableInputDevices(audio_inputs, video_inputs))\n        })\n    }\n\n    _.map(in_tracks, (local_track) => {\n\n        window.localStorage.setItem(`${local_track.getType()}_device_id`, local_track.getDeviceId())\n        dispatch(setInputDevice(local_track.getType(), local_track.getDeviceId()))\n\n        local_track.addEventListener(\n            window.JitsiMeetJS.events.track.TRACK_MUTE_CHANGED,\n            onTrackMuteChanged(dispatch)\n        )\n\n        // local_track.addEventListener(\n        //     window.JitsiMeetJS.events.track.LOCAL_TRACK_STOPPED,\n        //     (track) => {\n        //         console.error(\"LOCAL_TRACK_STOPPED\", track)\n        //     }\n        // )\n\n        // Send lower quality video by default\n        window.JitsiConference.setSenderVideoConstraint(180)\n\n        if (local_track.getType() === 'video') {\n            const last_video_preference = getFromLocalStorage('SHOW_VIDEO', 'false')\n            if (last_video_preference === 'true') {\n                console.warn('unmuting video')\n                local_track.unmute()\n            } else {\n                local_track.mute()\n            }\n        } else {\n            // Always start with audio muted\n            local_track.mute().then(() => {\n                console.warn('audio muted...')\n            })\n        }\n\n        window.JitsiConference.addTrack(local_track).then(() => {\n\n            dispatch(updateUser(window.JitsiConference.myUserId(), {\n                hasTracks: true,\n                [`muted_${local_track.getType()}`]: local_track.isMuted(),\n                [`has_${local_track.getType()}`]: true\n            }))\n\n            // Send lower quality video by default, incase the first time didn't work\n            window.setTimeout(function () {\n                window.JitsiConference.setSenderVideoConstraint(180)\n            }, 1000)\n        })\n    })\n\n    dispatch(updateUser(window.JitsiConference.myUserId(), {hasTracks: true}))\n\n}\n\n/////////////////\n// REMOTE USERS\n/////////////////\nconst onUserJoined = dispatch => userId => {\n    const user = window.JitsiConference.getParticipantById(userId)\n    console.warn('onUserJoined', user)\n\n    dispatch(addUser({\n        id: userId,\n        activeRoom: 'MAIN',\n        displayName: user.getDisplayName()\n    }))\n}\n\nconst onRemoteTrackAdded = dispatch => track => {\n    if (track.isLocal()) {\n        window.JitsiConference.setSenderVideoConstraint(180)\n        return\n    }\n\n    console.warn('Remote TRACK_ADDED', track.getParticipantId(), track.isMuted(), track)\n\n    track.addEventListener(window.JitsiMeetJS.events.track.TRACK_MUTE_CHANGED, onTrackMuteChanged(dispatch))\n    track.addEventListener(window.JitsiMeetJS.events.track.LOCAL_TRACK_STOPPED, () =>\n        console.warn('remote track stoped')\n    )\n    track.addEventListener(\n        window.JitsiMeetJS.events.track.TRACK_AUDIO_OUTPUT_CHANGED,\n        (deviceId) =>\n            console.warn(`track audio output device was changed to ${deviceId}`)\n    )\n\n    const userId = track.getParticipantId()\n\n    dispatch(addRemoteUserTrack(userId, track.getType(), track.isMuted()))\n}\n\nconst onRemoteTrackRemoved = dispatch => track => {\n\n    console.warn('TRACK_REMOVED', track, track.containers)\n\n    let userId = track.getParticipantId()\n    if (!userId) {\n        userId = window.JitsiConference.myUserId()\n    }\n\n    dispatch(updateUser(userId, {\n        [`has_${track.getType()}`]: false,\n        [`muted_${track.getType()}`]: true\n    }))\n}\n\nconst onUserLeft = dispatch => userId => {\n    dispatch(removeUser(userId))\n}\n\n/////////////////\n// SIDE ROOMS\n/////////////////\nexport const joinSideRoom = roomName => {\n    const room = window.JitsiConference\n    if (!room) return\n\n    const userId = room.myUserId()\n\n    room.sendCommand(JOIN_MINI_CONFERENCE_CMD, {\n        attributes: {\n            from: userId,\n            to: roomName\n        }\n    })\n\n    // dispatch(updateUser(userId, { activeRoom: roomName }))\n}\n\nconst onSideRoomJoined = dispatch => e => {\n    const userId = e.attributes['from']\n    const to = e.attributes['to']\n\n    console.warn(JOIN_MINI_CONFERENCE_CMD, userId, to)\n\n    if (userId === window.JitsiConference.myUserId()) {\n        const {audio} = getLocalTracks()\n        if (audio) {\n            audio.unmute()\n        }\n\n        window.soundcloud && window.soundcloud.setVolume(10)\n    }\n\n    dispatch(updateUser(userId, {activeRoom: to}))\n}\n\nexport const leaveSideRoom = roomName => {\n    const room = window.JitsiConference\n    if (!room) return\n\n    room.removeCommand(JOIN_MINI_CONFERENCE_CMD)\n    room.sendCommandOnce(LEAVE_MINI_CONFERENCE_CMD, {\n        attributes: {\n            from: room.myUserId(),\n            to: roomName\n        }\n    })\n\n    // dispatch(updateUser(room.myUserId(), { activeRoom: 'MAIN' }))\n}\n\nconst onSideRoomLeft = dispatch => e => {\n    if (!window.JitsiConference) return\n\n    const userId = e.attributes['from']\n\n    console.warn(LEAVE_MINI_CONFERENCE_CMD, userId)\n\n    if (userId === window.JitsiConference.myUserId()) {\n        const {audio} = getLocalTracks()\n        audio && audio.mute()\n        window.soundcloud.setVolume(100)\n    }\n\n    dispatch(updateUser(userId, {activeRoom: 'MAIN'}))\n}\n\n//////////////////////\n// USER INTERACTIONS\n//////////////////////\nexport const onVideoMuteToggle = () => {\n    const {video} = getLocalTracks()\n    if (!video) {\n        return\n    }\n    if (video.isMuted()) {\n        video.unmute()\n        window.localStorage.setItem('SHOW_VIDEO', 'true')\n    } else {\n        video.mute()\n        window.localStorage.setItem('SHOW_VIDEO', 'false')\n    }\n}\n\nconst onTrackMuteChanged = dispatch => track => {\n    console.warn('TRACK_MUTE_CHANGED', track)\n\n    if (!track) {\n        return\n    }\n    const userId = track.ownerEndpointId ? track.ownerEndpointId : window.JitsiConference.myUserId()\n\n    dispatch(updateUser(userId, {\n        [`muted_${track.getType()}`]: track.isMuted()\n    }))\n\n}\n\nconst onLocalTrackMuteChanged = () => {\n}\n\nconst onLocalTrackStopped = () => {\n}\n\nconst OnLocalTrackAudioOutputChanged = () => {\n}\n\nexport const setLocalDisplayName = (userId, displayName) => {\n    if (!window.JitsiConference) return\n\n    console.warn('setLocalDisplayName')\n\n    // This will send the event name to other participants\n    window.JitsiConference.setDisplayName(displayName)\n\n    // Save this on localStorage\n    window.localStorage.setItem('DISPLAY_NAME', displayName)\n\n    // Because DISPLAY_NAME_CHANGED is not fired for local users, fire it\n    window.JitsiConference.eventEmitter.emit(window.JitsiMeetJS.events.conference.DISPLAY_NAME_CHANGED, userId, displayName)\n}\n\nexport const setLocalEmoji = (emoji) => {\n    if (!window.JitsiConference) return\n\n    // This will send the event name to other participants\n    window.JitsiConference.sendCommand(SET_EMOJI_CMD, {\n            attributes: {\n                'id': window.JitsiConference.myUserId(),\n                'emoji': emoji\n            }\n        }\n    )\n    window.localStorage.setItem('EMOJI', emoji)\n}\n\nexport const setGlobalUID = (globalUID) => {\n    if (!window.JitsiConference) return\n\n    // This will send the event name to other participants\n    window.JitsiConference.sendCommand(SET_GLOBAL_UID_CMD, {\n            attributes: {\n                'globalUID': globalUID,\n                'conference_id': window.JitsiConference.myUserId()\n            }\n        }\n    )\n    window.localStorage.setItem('GLOBAL_UID', globalUID)\n}\n\nexport const sendPublicMessage = (msg) => {\n    sendPrivateMessage(\"public\", \"public\", msg);\n}\n\nexport const sendPrivateMessage = (targetGlobalUID, targetDisplayName, msg) => {\n    if (!window.JitsiConference) return\n\n    console.error(\"sendPrivate\", targetGlobalUID, targetDisplayName, msg)\n\n    // TODO(DROR,ASAF): Can we access the state here?\n    const displayName = getFromLocalStorage('DISPLAY_NAME', DEFAULT_USERNAME)\n    const emoji = getFromLocalStorage('EMOJI', DEFAULT_EMOJI)\n\n\n    const msg_object = {\n        globalUID: getFromLocalStorage('GLOBAL_UID'),\n        displayName: displayName,\n        targetDisplayName: targetDisplayName,\n        emoji: emoji,\n        recipient: targetGlobalUID,\n        text: msg\n    }\n\n    window.JitsiConference.sendMessage(JSON.stringify(msg_object))\n}\n\n/////////////////\n// MISC\n/////////////////\nexport const kickInterruptedConnections = () => {\n    if (!window.JitsiConference) return\n\n    const participants = window.JitsiConference.getParticipants()\n    _.forEach(participants, p => {\n        if (p._connectionStatus === 'interrupted') {\n            console.warn('Kicking participant because of interrupted connection', p._id)\n            window.JitsiConference.kickParticipant(p._id)\n        }\n    })\n}\n\nexport const unload = () => {\n    if (!window.JitsiConference) return\n\n    _.each(window.JitsiConference.getLocalTracks(), track => track.dispose())\n    window.JitsiConference.leave()\n    window.connection.disconnect()\n}\n\n","export const soundtrackPlayerConfig = {\n    id: 'player-soundtrack',\n    containerClassName: 'player-soundtrack',\n    videoId: 'T92xtvU4WRc',\n    options: {\n        videoId: 'T92xtvU4WRc',\n        playlist: 'QtXx3Qubmys',\n        width: 1,               // Player width (in px)\n        height: 1,              // Player height (in px)\n        playerVars: {\n            autoplay: 1,        // Auto-play the video on load\n            controls: 0,        // Show pause/play buttons in player\n            showinfo: 0,        // Hide the video title\n            modestbranding: 1,  // Hide the Youtube Logo\n            loop: 1,            // Run the video in a loop\n            fs: 1,              // Hide the full screen button\n            cc_load_policy: 1, // Hide closed captions\n            iv_load_policy: 3,  // Hide the Video Annotations\n            autohide: 1,         // Hide video controls when playing,\n            disablekb: 1,\n            start: 100\n        },\n    },\n    onReady: e => {\n        e.target.setVolume(100)\n        e.target.playVideo()\n    }\n}\n\nexport const videoArtPlayerBaseConfig = {\n    id: 'muteYouTubeVideoPlayer',\n    containerClassName: 'video-art-player',\n    videoId: 'm6cy9PqMgIk',\n    options: {\n        videoId: 'm6cy9PqMgIk', // YouTube Video ID\n        // width: 640, // Player width (in px)\n        // height: 480, // Player height (in px)\n        playerVars: {\n            autoplay: 1, // Auto-play the video on load\n            controls: 0, // Show pause/play buttons in player\n            showinfo: 0, // Hide the video title\n            modestbranding: 1, // Hide the Youtube Logo\n            loop: 1, // Run the video in a loop\n            fs: 0, // Hide the full screen button\n            cc_load_policy: 1, // Hide closed captions\n            iv_load_policy: 3, // Hide the Video Annotations\n            autohide: 1, // Hide video controls when playing,\n            disablekb: 1,\n            playlist: 'm6cy9PqMgIk', // for the loop\n            // start: 60,\n            // origin: 'https://foosa-a977b5f6.localhost.run',\n        },\n    },\n    onReady: e => {\n        e.target.playVideo()\n    }\n//            onEnd: e => {\n//                console.error(\"onEnd\")\n//                e.target.seekTo(0)\n//            }\n    }\n\n\nconst videoArtStartTime = 1590157170;\n\nconst videoArtVideos = [{\n    'run_time': 67,\n    'videoId': 'm6cy9PqMgIk'\n    }, {\n    'run_time': 63,\n    'videoId': 'YlUgvW4tUW4'\n    }\n]\n\nexport const videoArtArray = [\n    {\n            \"run_time\": 64,\n            \"player\": {\n            id: 'muteYouTubeVideoPlayer',\n            containerClassName: 'video-art-player',\n            videoId: '3V9bPvna3nM',\n            options: {\n                videoId: '3V9bPvna3nM', // YouTube Video ID\n                playerVars: {\n                    autoplay: 1, // Auto-play the video on load\n                    controls: 0, // Show pause/play buttons in player\n                    showinfo: 0, // Hide the video title\n                    modestbranding: 1, // Hide the Youtube Logo\n                    loop: 1, // Run the video in a loop\n                    fs: 0, // Hide the full screen button\n                    cc_load_policy: 1, // Hide closed captions\n                    iv_load_policy: 3, // Hide the Video Annotations\n                    autohide: 1, // Hide video controls when playing,\n                    disablekb: 1,\n                    playlist: 'm6cy9PqMgIk', // for the loop\n                },\n            }\n        }\n    },\n        {\n            \"run_time\": 63,\n            \"player\": {\n            id: 'muteYouTubeVideoPlayer',\n            containerClassName: 'video-art-player',\n            videoId: 'YlUgvW4tUW4',\n            options: {\n                videoId: 'YlUgvW4tUW4', // YouTube Video ID\n                playerVars: {\n                    autoplay: 1, // Auto-play the video on load\n                    controls: 0, // Show pause/play buttons in player\n                    showinfo: 0, // Hide the video title\n                    modestbranding: 1, // Hide the Youtube Logo\n                    loop: 1, // Run the video in a loop\n                    fs: 0, // Hide the full screen button\n                    cc_load_policy: 1, // Hide closed captions\n                    iv_load_policy: 3, // Hide the Video Annotations\n                    autohide: 1, // Hide video controls when playing,\n                    disablekb: 1,\n                    playlist: 'm6cy9PqMgIk', // for the loop\n                },\n            }\n        }\n    },\n    {\n        \"run_time\": 67,\n        \"player\": {\n            id: 'muteYouTubeVideoPlayer',\n            containerClassName: 'video-art-player',\n            videoId: 'm6cy9PqMgIk',\n            options: {\n                videoId: 'm6cy9PqMgIk', // YouTube Video ID\n                // width: 640, // Player width (in px)\n                // height: 480, // Player height (in px)\n                playerVars: {\n                    autoplay: 1, // Auto-play the video on load\n                    controls: 0, // Show pause/play buttons in player\n                    showinfo: 0, // Hide the video title\n                    modestbranding: 1, // Hide the Youtube Logo\n                    loop: 1, // Run the video in a loop\n                    fs: 0, // Hide the full screen button\n                    cc_load_policy: 1, // Hide closed captions\n                    iv_load_policy: 3, // Hide the Video Annotations\n                    autohide: 1, // Hide video controls when playing,\n                    disablekb: 1,\n                    playlist: 'm6cy9PqMgIk', // for the loop\n                    // start: 60,\n                    // origin: 'https://foosa-a977b5f6.localhost.run',\n                },\n            }\n        }\n    },\n            {\n            \"run_time\": 106,\n            \"player\": {\n            id: 'muteYouTubeVideoPlayer',\n            containerClassName: 'video-art-player',\n            videoId: 'qlqglpBq7Ho',\n            options: {\n                videoId: 'qlqglpBq7Ho', // YouTube Video ID\n                playerVars: {\n                    autoplay: 1, // Auto-play the video on load\n                    controls: 0, // Show pause/play buttons in player\n                    showinfo: 0, // Hide the video title\n                    modestbranding: 1, // Hide the Youtube Logo\n                    loop: 1, // Run the video in a loop\n                    fs: 0, // Hide the full screen button\n                    cc_load_policy: 1, // Hide closed captions\n                    iv_load_policy: 3, // Hide the Video Annotations\n                    autohide: 1, // Hide video controls when playing,\n                    disablekb: 1,\n                    playlist: 'm6cy9PqMgIk', // for the loop\n                },\n            }\n        }\n    },\n]\n\nconst getVideoArtTotalPlayTime = () => {\n    var sum = 0;\n\n    for (let i = 0; i < videoArtArray.length; i++) {\n        sum += videoArtArray[i]['run_time'];\n    }\n\n    return sum;\n}\n\nconst totalVideoArtPlayTime = getVideoArtTotalPlayTime();\n\n//console.error(\"TOTAL VIDEO PLAY TIME\", totalVideoArtPlayTime)\nexport const currentVideoArtPlayerIx = () => {\n    var now = Math.round(new Date().getTime() / 1000);\n    var delta = now - videoArtStartTime;\n\n    var currentVideoArtIx = 0;\n\n    var loopAmount = Math.floor(delta / totalVideoArtPlayTime);\n\n    var totalLoopAmountPlayTime = loopAmount * totalVideoArtPlayTime;\n\n    var currentTimeInLoop = delta - totalLoopAmountPlayTime;\n\n    for (let i = 0; i < videoArtArray.length; i++) {\n        if (currentTimeInLoop < videoArtArray[i]['run_time']) {\n            currentVideoArtIx = i;\n            break;\n        }\n\n        currentTimeInLoop -= videoArtArray[i]['run_time'];\n    }\n\n    return {\"index\": currentVideoArtIx, \"seek\": currentTimeInLoop}\n}\n","import { useEffect } from 'react'\n\nconst useOutsideClick = (ref, callback) => {\n    const handleClick = e => {\n        if (ref.current && !ref.current.contains(e.target)) {\n            callback(e)\n        }\n    }\n    useEffect(() => {\n        document.addEventListener('click', handleClick)\n        return () => {\n            document.removeEventListener('click', handleClick)\n        }\n    })\n}\nexport default useOutsideClick","import Popup from './Popup'\n\nexport default Popup","import React, { useRef } from 'react'\nimport classNames from 'classnames'\nimport useOutsideClick from '../../hooks/useOutsideClick'\n\nconst Popup = ({ children, className, onOutsideClick }) => {\n\n    const ref = useRef(null)\n\n    useOutsideClick(ref, onOutsideClick)\n\n    return (\n        <div className={classNames('popup', className)} ref={ref}>\n            {children}\n        </div>\n    )\n}\n\nexport default Popup\n","import AutoHide from './AutoHide'\n\nexport default AutoHide","import React, { useEffect, useState } from 'react'\n\nconst AutoHide = ({ children, refreshKey, ttl = -1, hidden }) => {\n\n    const [startedHidden, setStartedHidden] = useState(null)\n    const [isVisible, setIsVisible] = useState(true)\n\n    useEffect(() => {\n        setStartedHidden(hidden)\n    }, [])\n\n    useEffect(() => {\n        if (ttl > -1) {\n            setIsVisible(true)\n            const timer = setTimeout(() => {\n                setIsVisible(false)\n            }, ttl)\n            return () => clearTimeout(timer)\n        }\n    }, [refreshKey])\n\n    return isVisible && !hidden && !startedHidden && children\n}\n\nexport default AutoHide\n","import EmojiList from './EmojiSelection'\n\nexport default EmojiList","import React from 'react'\nimport _ from 'lodash'\nimport classNames from 'classnames'\nimport { useSelector } from 'react-redux'\nimport { getLocalUser } from '../../store/users'\nimport { setLocalEmoji } from '../../modules/meeting'\nimport EMOJIES from '../../config/config.emoji'\nimport './EmojiSelection.scss'\n\nconst EmojiSelection = ({ onSelection }) => {\n\n    const localUser = useSelector(getLocalUser)\n\n    const onEmojiClick = emoji => e => {\n        e.stopPropagation()\n\n        if (emoji === localUser.emoji) return\n\n        setLocalEmoji(emoji)\n        onSelection && onSelection(emoji)\n    }\n\n    return (\n        <div className=\"emoji-selection\">\n            {_.map(EMOJIES, (emoji, i) => (\n                <div key={`emoji-${i}`} onClick={onEmojiClick(emoji)}\n                     className={classNames('emoji-item', { selected: emoji === localUser.emoji })}>{emoji}</div>\n            ))}\n        </div>\n    )\n}\n\nexport default EmojiSelection\n","import SpeechBubble from './SpeechBubble'\n\nexport default SpeechBubble","import React from 'react'\nimport classNames from 'classnames'\nimport './SpeechBubble.scss'\n\nconst SpeechBubble = ({ children, className }) => {\n    return (\n        <div className={classNames(\"bubble-wrapper\", className)} onClick={e => e.stopPropagation()}>\n            <div className=\"speech-bubble\">{children}</div>\n        </div>\n    )\n}\n\nexport default SpeechBubble\n","import ChatInput from './TextInput'\n\nexport default ChatInput","import React, { useRef, useEffect } from 'react'\nimport _ from 'lodash'\nimport classNames from 'classnames'\nimport ContentEditable from 'react-contenteditable'\n\nimport './TextInput.scss'\n\nconst stripHtml = html => {\n    const doc = new DOMParser().parseFromString(html, 'text/html')\n    return doc.body.textContent || ''\n}\n\nconst TextInput = ({ className, submit, dismiss }) => {\n\n    const ref = useRef()\n    const text = useRef('')\n\n    useEffect(() => {\n        ref && ref.current.focus()\n    }, [ref])\n\n    const onKeyPress = e => {\n        if (_.isEmpty(text.current)) return\n\n        // submit on \"enter\"\n        if (e.charCode === 13) {\n            e.preventDefault()\n            submit && submit(stripHtml(text.current))\n            dismiss && dismiss()\n        }\n    }\n\n    const onKeyDown = e => {\n        // dismiss on \"esc\"\n        if (e.keyCode === 27) {\n            dismiss && dismiss()\n        }\n    }\n\n    const onChange = e => text.current = e.target.value\n\n    return (\n        <ContentEditable\n            innerRef={ref}\n            html={text.current}\n            className={classNames('text-input', className)}\n            onChange={onChange}\n            onKeyPress={onKeyPress} onKeyDown={onKeyDown}\n        />\n    )\n}\n\nexport default TextInput\n","import ChatMessage from \"./ChatMessage\";\n\nexport default ChatMessage\n","import React from 'react'\nimport './ChatMessage.scss'\nimport classNames from 'classnames'\n\nconst nice_date = (date) => {\n    const hours_str = date.getHours().toString().padStart(2, 0)\n    const minutes_str = date.getMinutes().toString().padStart(2, 0)\n    return `${hours_str}:${minutes_str}`\n}\n\nconst ChatMessage = ({ displayName, targetDisplayName, from_me, to_me, text, emoji, ts, recipient }) => {\n\n    const getFromText = (displayName) => {\n        if (to_me && (recipient !== 'public')) {\n            return `Private from ${displayName}`\n        }\n        return displayName\n    }\n\n    const getToText = (displayName) => {\n        if (from_me && (recipient !== 'public')) {\n            return `Private to ${displayName}`\n        }\n        return displayName\n    }\n\n    const isPrivate = recipient !== 'public'\n\n    const messageClassNames = classNames('text-message', {\n        'from_me': from_me,\n        'to_me': to_me\n    })\n\n    const renderPublic = () => (\n        <div className={classNames(messageClassNames, 'public')}>\n            <span className=\"emoji\">{emoji}</span>\n            <span className=\"nick from\">{getFromText(displayName)}</span>\n            <span className=\"nick to\">{getToText(targetDisplayName)}</span>\n            <span className=\"msg-date\">({nice_date(ts)}) </span>\n            <span className=\"text\">{text}</span>\n        </div>\n    )\n\n    const renderPrivate = () => (\n        <div className={classNames(messageClassNames, 'private')}>\n            <span className=\"text\">{text}</span>\n        </div>\n    )\n\n    return isPrivate ? renderPrivate() : renderPublic()\n}\n\nexport default ChatMessage\n","import ChatDrawer from './ChatDrawer'\n\nexport default ChatDrawer\n","import _ from 'lodash'\nimport React from 'react'\nimport './ChatDrawer.scss'\nimport { useSelector } from 'react-redux'\nimport ChatMessage from '../ChatMessage'\nimport ScrollToBottom from 'react-scroll-to-bottom'\nimport { css } from 'glamor'\n\nconst ChatDrawer = ({ messagesSelector, maxHeight = -1 }) => {\n\n    const messages = useSelector(messagesSelector)\n\n    const styles = {\n        'background-color': 'rgba(0, 0, 0, 0.7)',\n        height: '100vh',\n    }\n    if (maxHeight > -1) {\n        styles.height = _.size(messages) === 0 ? 0 : maxHeight\n    }\n\n    return (\n        <ScrollToBottom className={css(styles)}>\n            <div className=\"chat-drawer\">\n                {_.map(_.orderBy(messages, 'ts', 'asc'), (msg) => {\n                    return (\n                        <ChatMessage key={msg.ts.toISOString().concat(msg.globalUID)} ts={msg.ts} text={msg.text}\n                                     displayName={msg.displayName}\n                                     targetDisplayName={msg.targetDisplayName} from_me={msg.from_me} to_me={msg.to_me}\n                                     emoji={msg.emoji} recipient={msg.recipient}/>\n                    )\n                })}\n            </div>\n        </ScrollToBottom>\n    )\n}\n\nexport default ChatDrawer\n","import Chat from './Chat'\n\nexport default Chat\n","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { getPrivateMessages } from '../../store/messages'\nimport ChatDrawer from '../ChatDrawer'\nimport TextInput from '../TextInput'\nimport { sendPrivateMessage } from '../../modules/meeting'\nimport { getLocalUser } from '../../store/users'\n\nconst Chat = ({ recipient, maxDrawerHeight }) => {\n\n    const [isSending, setIsSending] = useState(false)\n\n    const localUser = useSelector(getLocalUser)\n\n    useEffect(() => {\n        if (isSending) {\n            setIsSending(false)\n        }\n\n    }, [isSending])\n\n    const { globalUID, displayName } = recipient\n\n    const sendMessage = msg => {\n        sendPrivateMessage(globalUID, displayName, msg)\n        setIsSending(true)\n    }\n\n    return (\n        <div className=\"chat\">\n            <ChatDrawer messagesSelector={getPrivateMessages(globalUID, localUser.globalUID)} maxHeight={maxDrawerHeight}/>\n            {!isSending && (<TextInput className=\"chat-message\" submit={sendMessage}/>)}\n        </div>\n    )\n}\n\nexport default Chat\n","import React, { useState } from 'react'\nimport ChatMessage from '../ChatMessage'\n\nconst ChatMessagePreview = ({ message }) => {\n    const [keepHidden, setKeepHidden] = useState(false)\n    return !keepHidden && (\n        <div className=\"chat message-preview\" onClick={() => setKeepHidden(true)}>\n            <div className=\"chat-drawer\">\n                <ChatMessage {...message} />\n            </div>\n        </div>\n    )\n}\n\nexport default ChatMessagePreview\n","import React, {useEffect, useRef, useState} from 'react'\nimport _ from 'lodash'\nimport {getTracks} from '../../utils'\nimport {sendPublicMessage, setLocalDisplayName} from '../../modules/meeting'\nimport {getUserLastPublicMessage ,getLastPrivateMessageFromUser} from '../../store/messages'\nimport classNames from 'classnames'\nimport './UserDisplay.scss'\nimport {useSelector} from 'react-redux'\nimport Popup from '../Popup'\nimport AutoHide from '../AutoHide'\nimport EmojiSelection from '../EmojiSelection'\nimport SpeechBubble from '../SpeechBubble'\nimport TextInput from '../TextInput'\nimport { getLocalUser } from '../../store/users'\nimport Chat from '../Chat'\nimport ChatMessagePreview from '../Chat/ChatMessagePreview'\n\nconst attach = (track, ref) => track && ref.current && track.attach(ref.current)\n\nconst detachAndDispose = (track, ref) => {\n    if (track && ref.current) {\n        track.detach(ref.current)\n        track.dispose()\n    }\n}\n\nconst UserDisplay = ({user, isAudioActive}) => {\n\n    const {id: userId, globalUID, isLocal, has_audio, has_video, muted_audio, muted_video, displayName, emoji, isDominantSpeaker} = user\n\n    const videoRef = useRef(null)\n    const audioRef = useRef(null)\n\n    const [videoTrack, setVideoTrack] = useState(null)\n    const [audioTrack, setAudioTrack] = useState(null)\n\n    const [popup, setPopup] = useState(null)\n    const [isChatOpen, setIsChatOpen] = useState(false)\n\n    const localUser = useSelector(getLocalUser)\n\n    const bubbleMessage = useSelector(getUserLastPublicMessage(globalUID, localUser.globalUID))\n\n    const lastPrivateMessageFromUser = useSelector(getLastPrivateMessageFromUser(globalUID, localUser.globalUID))\n\n    useEffect(() => {\n\n        console.warn(\"useEffect\", has_video, videoRef)\n\n        if (has_video) {\n            const {video} = getTracks(userId, isLocal)\n            attach(video, videoRef)\n            setVideoTrack(video)\n        }\n\n        return () => {\n            if (has_video) {\n                detachAndDispose(videoTrack, videoRef)\n            }\n        }\n    }, [has_video, videoRef])\n\n    useEffect(() => {\n\n        if (has_audio) {\n            const {audio} = getTracks(userId, isLocal)\n            attach(audio, audioRef)\n            setAudioTrack(audio)\n        }\n\n        return () => {\n            if (has_audio) {\n                detachAndDispose(audioTrack, audioRef)\n            }\n        }\n    }, [has_audio, audioRef])\n\n    const renderInputBubble = ({ className, placeholder, submit, onHeightChange }) => (\n        <SpeechBubble className={className}>\n            <TextInput placeholder={placeholder}\n                       submit={submit}\n                       onHeightChange={onHeightChange}\n                       dismiss={hidePopup}/>\n        </SpeechBubble>\n    )\n\n    const onClick = e => {\n        e.stopPropagation()\n\n        if (isLocal) {\n            //send public message\n            setPopup(renderInputBubble({\n                placeholder: 'Say something',\n                submit: sendPublicMessage,\n            }))\n        } else {\n            setIsChatOpen(true)\n            // send private message\n            setPopup(<Chat recipient={user} maxDrawerHeight={180} />)\n        }\n\n    }\n\n    const onNameClick = e => {\n        e.stopPropagation()\n\n        if (!isLocal) return\n\n        setPopup(renderInputBubble({\n            className: 'centered no-pointer',\n            placeholder: 'Choose name',\n            submit: newName => setLocalDisplayName(userId, newName),\n        }))\n    }\n\n    const hidePopup = () => {\n        setPopup(null)\n        setIsChatOpen(false)\n    }\n\n    const onEmojiClick = e => {\n        e.stopPropagation()\n\n        console.error(e.key)\n\n        if (e.shiftKey) {\n            // emoji clicked when shift is pressed\n            console.warn('emoji shift+click')\n            return\n        }\n\n        if (!isLocal) return\n\n        setPopup(<EmojiSelection onSelection={hidePopup}/>)\n    }\n\n    const videoClassNames = classNames('user-display video person', {\n        'video_self': isLocal,\n        'remote_participant': !isLocal,\n        'no_video': !has_video || muted_video,\n        'no_audio': !has_audio || muted_audio,\n        'muted': !isAudioActive && !isLocal,\n        'dominant': isDominantSpeaker,\n        'local_muted': !isAudioActive && isLocal,\n        [`id_${userId}`]: true,\n        [`globalUID_${globalUID}`]: true\n    })\n\n    const popupOpen = !_.isNil(popup)\n\n    return (\n        <div className={videoClassNames} onClick={onClick}>\n            <div className=\"emoji\" onClick={onEmojiClick}>{emoji}</div>\n            {has_audio && !muted_audio && (\n                <div className=\"emoji mic\">🎤</div>\n            )}\n            <div className=\"id\" onClick={onNameClick}>{displayName}</div>\n            {bubbleMessage && (\n                <AutoHide ttl={7000} refreshKey={bubbleMessage.ts} hidden={popupOpen}>\n                    <SpeechBubble className={classNames({ to_me: bubbleMessage.to_me })}>\n                        {bubbleMessage.text}\n                    </SpeechBubble>\n                </AutoHide>\n            )}\n            {lastPrivateMessageFromUser && (\n                <AutoHide ttl={3000} refreshKey={lastPrivateMessageFromUser.ts} hidden={isChatOpen}>\n                    <ChatMessagePreview message={lastPrivateMessageFromUser}/>\n                </AutoHide>\n            )}\n            <div className=\"in\"/>\n            {has_video && (\n                <video autoPlay=\"1\" ref={videoRef}/>\n            )}\n            {has_audio && (\n                <audio muted={isLocal || !isAudioActive} autoPlay=\"1\" ref={audioRef}/>\n            )}\n            {popupOpen && (\n                <Popup onOutsideClick={hidePopup}>{popup}</Popup>\n            )}\n        </div>\n    )\n}\n\nexport default UserDisplay\n","import UserDisplay from './UserDisplay'\n\nexport default UserDisplay","import React, { useCallback } from 'react'\nimport _ from 'lodash'\nimport UserDisplay from './index'\n\nconst UserList = ({ users, isAudioActive }) => {\n\n  const renderUser = useCallback(user => (\n    <UserDisplay key={`user-display-${user.id}`} user={user} isAudioActive={isAudioActive}/>\n  ), [users])\n\n  return (\n      <div className=\"users-display\">\n        {_.map(_.orderBy(users, 'id'), renderUser)}\n      </div>\n  )\n}\n\nexport default UserList\n","import SideRoom from './SideRoom'\n\nexport default SideRoom","import React, { useCallback } from 'react'\nimport _ from 'lodash'\nimport classNames from 'classnames'\nimport { useSelector } from 'react-redux'\nimport { getLocalUser, getUsersByActiveRoom } from '../../store/users'\nimport { joinSideRoom } from '../../modules/meeting'\nimport './SideRoom.scss'\nimport UserDisplay from '../UserDisplay'\n\nexport default ({ name, maxSeats, userInside }) => {\n\n    const users = useSelector(getUsersByActiveRoom(name))\n\n    const userCount = _.size(users)\n    const emptySeatCount = maxSeats - userCount\n\n    const localUser = useSelector(getLocalUser)\n\n    const localUserInRoom = localUser.activeRoom === name\n\n    const onFreeSeatClick = () => {\n        !localUserInRoom && joinSideRoom(name)\n    }\n\n    const renderUser = useCallback(user => (\n        <UserDisplay key={`user-display-${user.id}`} user={user} isAudioActive={localUserInRoom}/>\n    ), [users])\n\n    const ClassNames = classNames('side-room', {\n        \"inside\": userInside\n    })\n\n    return (\n        <div className={ClassNames} onClick={e => e.stopPropagation()}>\n            <div>{userInside? \"he\": \"no\"}</div>\n            <div className=\"bg\"/>\n            {_.map(_.orderBy(users, 'id'), user => (\n                <div className=\"seat\">{renderUser(user)}</div>\n            ))}\n            {_.map(Array(emptySeatCount), (o, i) => {\n                return (\n                    <div key={`empty-seat-${i}`} className=\"seat\">\n                        <div className={classNames('user-display free-seat')} onClick={onFreeSeatClick}>\n                            <div className=\"id\">Speak up</div>\n                            <div className=\"in\"/>\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n","import YouTubePlayer from './YouTubePlayer'\n\nexport default YouTubePlayer","import React, {useEffect, useState} from 'react'\nimport YouTube from 'react-youtube'\n\n\nconst YouTubePlayer = ({volume, ...props}) => {\n\n    const [player, setPlayer] = useState(null)\n\n    useEffect(() => {\n        if (player) {\n            player.setVolume(volume)\n        }\n    }, [volume])\n\n    const onReady = e => {\n        setPlayer(e.target)\n        props.onReady && props.onReady(e)\n    }\n\n    const onEnd = e => {\n        setPlayer(e.target)\n        props.onEnd && props.onEnd(e)\n    }\n\n    return (\n        <YouTube {...props} onReady={onReady} onEnd={onEnd}/>\n    )\n}\n\nexport default YouTubePlayer\n","import YouTubeVideoArtPlayer from './YouTubeVideoArtPlayer'\n\nexport default YouTubeVideoArtPlayer","import React, {useEffect, useState, setState} from 'react'\nimport {currentVideoArtPlayer, currentVideoArtPlayerIx, videoArtArray} from '../../config/config.videos'\nimport YouTube from 'react-youtube'\n\n\nconst YouTubeVideoArtPlayer = ({volume, ...props}) => {\n\n    const [player, setPlayer] = useState(null)\n    const [videoArtIndex, setVideoArtIndex] = useState(currentVideoArtPlayerIx()['index'])\n\n    useEffect(() => {\n        if (player) {\n            player.setVolume(volume)\n        }\n    }, [volume])\n\n    useEffect(() => {\n        if (player) {\n            player.playVideo()\n        }\n    }, [videoArtIndex])\n\n\n\n    const onReady = e => {\n\n        var seek = 0;\n        var videoArtIx = 0;\n\n        if (!player){\n            console.error(\"NO PLAYER\")\n            var videoArtTime = currentVideoArtPlayerIx()\n\n            seek = videoArtTime['seek']\n            videoArtIx = videoArtTime['index']\n            setPlayer(e.target)\n        }\n\n        setVideoArtIndex(videoArtIx)\n        e.target.seekTo(seek);\n        e.target.playVideo()\n\n    }\n\n    const onEnd = e => {\n\n        console.error(\"videoArtIndex before \", videoArtIndex);\n        console.error(\"videoArtIndex\", videoArtIndex)\n        props[videoArtIndex][\"player\"].onEnd && props[videoArtIndex][\"player\"].onEnd(e)\n\n        if (videoArtIndex + 1 === videoArtArray.length)\n        {\n            setVideoArtIndex(0)\n        }\n        else\n        {\n            setVideoArtIndex(videoArtIndex + 1)\n        }\n\n    }\n\n\n\n    return (\n        <YouTube {...props[videoArtIndex][\"player\"]} onReady={onReady} onEnd={onEnd}/>\n    )\n}\n\nexport default YouTubeVideoArtPlayer\n","import Room from './Room'\n\nexport default Room","import React from 'react'\nimport _ from 'lodash'\nimport classNames from 'classnames'\nimport { useSelector } from 'react-redux'\nimport { leaveSideRoom } from '../../modules/meeting'\nimport { getLocalUser, getUsersByActiveRoom } from '../../store/users'\nimport {currentVideoArtPlayer, videoArtArray} from '../../config/config.videos'\nimport UserList from '../UserDisplay/UserList'\nimport SideRoom from '../SideRoom'\nimport YouTubePlayer from '../YouTubePlayer'\nimport YouTubeVideoArtPlayer from '../YouTubeVideoArtPlayer'\nimport './Room.scss'\nimport ChatDrawer from '../ChatDrawer'\nimport { getPublicMessages } from '../../store/messages'\n\nconst Room = ({ roomName, withVideoArt }) => {\n\n    const room = useSelector(state => state.room)\n    const mainAreaUsers = useSelector(getUsersByActiveRoom('MAIN'))\n\n    const localUser = useSelector(getLocalUser)\n\n    if (_.isEmpty(localUser)) {\n        return null\n    }\n\n    const userInMainArea = localUser.activeRoom === 'MAIN'\n\n    const onMeetingAreaClick = () => {\n        !userInMainArea && leaveSideRoom(localUser.activeRoom)\n    }\n\n    return (\n        <div className={classNames('room', _.toLower(roomName))}>\n            <div className=\"bg\"/>\n            {withVideoArt && (\n                <div className=\"video-art-top\">\n                    <div className=\"big-video-container\">\n                        <YouTubeVideoArtPlayer {...videoArtArray}/>\n                    </div>\n                </div>\n            )}\n            <div className=\"main-area\" onClick={onMeetingAreaClick}>\n                {_.map(room.sideRooms, (sideRoom, i) => (\n                    <SideRoom userInside={!userInMainArea} key={`side-room-${i}`} {...sideRoom}/>\n                ))}\n                <UserList users={mainAreaUsers} roomName=\"MAIN\"/>\n                <div className=\"right-sidebar\">\n                    <ChatDrawer messagesSelector={getPublicMessages}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Room\n","import _ from 'lodash'\nimport React, {useState} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {getInputDevices} from \"../../store/devices\";\nimport classNames from \"classnames\";\nimport './options.scss'\nimport {switchInput} from \"../../modules/meeting\";\n\n\nconst MediaOption = ({input, type, local_input_id}) => {\n\n    const dispatch = useDispatch()\n\n    const onClick = (type, deviceId) => () => dispatch(switchInput(type, deviceId))\n\n    const inputClassNames = classNames('input', {\n        'is_active': local_input_id === input.deviceId\n    })\n\n    return (\n        <div onClick={onClick(type, input.deviceId)} className={inputClassNames}>{input.label}</div>\n    )\n}\n\nconst Options = () => {\n\n    const {audio_inputs, video_inputs, video_input_id, audio_input_id} = useSelector(getInputDevices)\n\n    return (\n        <div className=\"options-selector\">\n            <div className={\"header\"}>Audio inputs</div>\n            {_.map(audio_inputs, (audio_input) => {\n                return (<MediaOption input={audio_input} type=\"audio\" local_input_id={audio_input_id}/>)\n            })}\n            <div className={\"header\"}>Video inputs</div>\n            {_.map(video_inputs, (video_input) => {\n                return (<MediaOption input={video_input} type=\"video\" local_input_id={video_input_id}/>)\n            })}\n        </div>\n    )\n}\n\nexport default Options\n","import BottomNav from './BottomNav'\n\nexport default BottomNav","import React, {useState} from 'react'\nimport './BottomNav.scss'\nimport {onVideoMuteToggle, changeConference} from '../../modules/meeting'\nimport {ROOMS} from '../../consts'\nimport {useDispatch} from 'react-redux'\nimport Options from \"../Options/options\";\nimport Popup from '../Popup'\n\nconst BottomNav = ({roomName}) => {\n\n    const dispatch = useDispatch()\n\n    const [optionsVisible, setOptionsVisible] = useState(false)\n\n\n    const toggleFullscreen = () => {\n        if (!document.fullscreenElement) {\n            document.documentElement.requestFullscreen()\n        } else {\n            if (document.exitFullscreen) {\n                document.exitFullscreen()\n            }\n        }\n    }\n\n    const hidePopup = () => setOptionsVisible(false)\n\n    const onOptionsClick = (e) => {\n        e.stopPropagation()\n        setOptionsVisible(true)\n    }\n\n    const goToRoom = roomConfig => () => dispatch(changeConference(roomConfig))\n\n    return (\n        <div className=\"bottom-nav\">\n            {roomName !== 'block' && (\n                <div className=\"button button-to-block\" onClick={goToRoom(ROOMS.block)}/>\n            )}\n            {roomName !== 'toilet' && (\n                <div className=\"button button-to-toilet\" onClick={goToRoom(ROOMS.toilet)}/>\n            )}\n            <div className=\"button mute-toggle\" onClick={onVideoMuteToggle}/>\n            <div className=\"button fullscreen-toggle\" onClick={toggleFullscreen}/>\n            <div className=\"button button-options\" onClick={onOptionsClick}/>\n            {optionsVisible && (\n                <Popup onOutsideClick={hidePopup}>\n                    <Options/>\n                </Popup>\n            )}\n\n        </div>\n    )\n}\n\nexport default BottomNav\n","import React from 'react'\nimport Room from './components/Room'\nimport BottomNav from './components/BottomNav'\nimport { playSoundtrack } from './config/config.dev'\nimport { soundtrackPlayerConfig } from './config/config.videos'\nimport { useSelector } from 'react-redux'\nimport { getLocalUser } from './store/users'\nimport YouTubePlayer from './components/YouTubePlayer'\nimport { getRoom } from './store/room'\n\nfunction App () {\n\n    const { roomName } = useSelector(getRoom)\n\n    const localUser = useSelector(getLocalUser)\n\n    const soundtrackVolume = localUser && localUser.activeRoom === 'MAIN' ? 100 : 40\n\n    return (\n        <div className=\"app\">\n            <Room roomName={roomName} withVideoArt={roomName === 'block'}/>\n            <BottomNav roomName={roomName}/>\n            {playSoundtrack && (\n                <YouTubePlayer {...soundtrackPlayerConfig} volume={soundtrackVolume}/>\n            )}\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { applyMiddleware, combineReducers, createStore, compose } from 'redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n// reducers\nimport roomReducer from './room'\nimport usersReducer from './users'\nimport messagesReducer from './messages'\nimport devicesReducer from \"./devices\";\n\nconst rootReducer = combineReducers({\n  users: usersReducer,\n  room: roomReducer,\n  messages: messagesReducer,\n  devices: devicesReducer\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(logger, thunk)\n  )\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/main.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport {Provider} from 'react-redux'\nimport {initJitsi, kickInterruptedConnections, unload} from './modules/meeting'\nimport store from './store'\nimport {setInitialRoom} from './store/room'\n\n\n\n\n// init Jitsi\nwindow.JitsiMeetJS.setLogLevel(window.JitsiMeetJS.logLevels.ERROR)\n\nstore.dispatch(setInitialRoom())\n\ninitJitsi(store)\n\nsetInterval(kickInterruptedConnections, 5000);\n\n// TODO (ASAF) - check if both needed\nwindow.addEventListener(\"beforeunload\", unload)\nwindow.addEventListener(\"unload\", unload)\n\n// init React\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}